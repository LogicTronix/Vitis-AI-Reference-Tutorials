# GENETARED BY NNDCT, DO NOT EDIT!

import torch
from torch import tensor
import pytorch_nndct as py_nndct

class ResNet(py_nndct.nn.NndctQuantModel):
    def __init__(self):
        super(ResNet, self).__init__()
        self.module_0 = py_nndct.nn.Input() #ResNet::input_0(ResNet::nndct_input_0)
        self.module_1 = py_nndct.nn.Conv2d(in_channels=3, out_channels=64, kernel_size=[7, 7], stride=[2, 2], padding=[3, 3], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Conv2d[conv1]/ret.3(ResNet::nndct_conv2d_1)
        self.module_2 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/ReLU[relu]/ret.7(ResNet::nndct_relu_2)
        self.module_3 = py_nndct.nn.MaxPool2d(kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], ceil_mode=False) #ResNet::ResNet/MaxPool2d[maxpool]/26089(ResNet::nndct_maxpool_3)
        self.module_4 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[0]/Conv2d[conv1]/ret.9(ResNet::nndct_conv2d_4)
        self.module_5 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[0]/ReLU[relu]/ret.13(ResNet::nndct_relu_5)
        self.module_6 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[0]/Conv2d[conv2]/ret.15(ResNet::nndct_conv2d_6)
        self.module_7 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[0]/ReLU[relu]/ret.19(ResNet::nndct_relu_7)
        self.module_8 = py_nndct.nn.Conv2d(in_channels=64, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[0]/Conv2d[conv3]/ret.21(ResNet::nndct_conv2d_8)
        self.module_9 = py_nndct.nn.Conv2d(in_channels=64, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[0]/Sequential[identity_downsample]/Conv2d[0]/ret.25(ResNet::nndct_conv2d_9)
        self.module_10 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer1]/block[0]/26200(ResNet::nndct_elemwise_add_10)
        self.module_11 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[0]/ReLU[relu]/ret.29(ResNet::nndct_relu_11)
        self.module_12 = py_nndct.nn.Conv2d(in_channels=256, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[1]/Conv2d[conv1]/ret.31(ResNet::nndct_conv2d_12)
        self.module_13 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[1]/ReLU[relu]/ret.35(ResNet::nndct_relu_13)
        self.module_14 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[1]/Conv2d[conv2]/ret.37(ResNet::nndct_conv2d_14)
        self.module_15 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[1]/ReLU[relu]/ret.41(ResNet::nndct_relu_15)
        self.module_16 = py_nndct.nn.Conv2d(in_channels=64, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[1]/Conv2d[conv3]/ret.43(ResNet::nndct_conv2d_16)
        self.module_17 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer1]/block[1]/26286(ResNet::nndct_elemwise_add_17)
        self.module_18 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[1]/ReLU[relu]/ret.47(ResNet::nndct_relu_18)
        self.module_19 = py_nndct.nn.Conv2d(in_channels=256, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[2]/Conv2d[conv1]/ret.49(ResNet::nndct_conv2d_19)
        self.module_20 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[2]/ReLU[relu]/ret.53(ResNet::nndct_relu_20)
        self.module_21 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[2]/Conv2d[conv2]/ret.55(ResNet::nndct_conv2d_21)
        self.module_22 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[2]/ReLU[relu]/ret.59(ResNet::nndct_relu_22)
        self.module_23 = py_nndct.nn.Conv2d(in_channels=64, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[2]/Conv2d[conv3]/ret.61(ResNet::nndct_conv2d_23)
        self.module_24 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer1]/block[2]/26372(ResNet::nndct_elemwise_add_24)
        self.module_25 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[2]/ReLU[relu]/ret.65(ResNet::nndct_relu_25)
        self.module_26 = py_nndct.nn.Conv2d(in_channels=256, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[0]/Conv2d[conv1]/ret.67(ResNet::nndct_conv2d_26)
        self.module_27 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[0]/ReLU[relu]/ret.71(ResNet::nndct_relu_27)
        self.module_28 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[0]/Conv2d[conv2]/ret.73(ResNet::nndct_conv2d_28)
        self.module_29 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[0]/ReLU[relu]/ret.77(ResNet::nndct_relu_29)
        self.module_30 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[0]/Conv2d[conv3]/ret.79(ResNet::nndct_conv2d_30)
        self.module_31 = py_nndct.nn.Conv2d(in_channels=256, out_channels=512, kernel_size=[1, 1], stride=[2, 2], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[0]/Sequential[identity_downsample]/Conv2d[0]/ret.83(ResNet::nndct_conv2d_31)
        self.module_32 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer2]/block[0]/26484(ResNet::nndct_elemwise_add_32)
        self.module_33 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[0]/ReLU[relu]/ret.87(ResNet::nndct_relu_33)
        self.module_34 = py_nndct.nn.Conv2d(in_channels=512, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[1]/Conv2d[conv1]/ret.89(ResNet::nndct_conv2d_34)
        self.module_35 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[1]/ReLU[relu]/ret.93(ResNet::nndct_relu_35)
        self.module_36 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[1]/Conv2d[conv2]/ret.95(ResNet::nndct_conv2d_36)
        self.module_37 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[1]/ReLU[relu]/ret.99(ResNet::nndct_relu_37)
        self.module_38 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[1]/Conv2d[conv3]/ret.101(ResNet::nndct_conv2d_38)
        self.module_39 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer2]/block[1]/26570(ResNet::nndct_elemwise_add_39)
        self.module_40 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[1]/ReLU[relu]/ret.105(ResNet::nndct_relu_40)
        self.module_41 = py_nndct.nn.Conv2d(in_channels=512, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[2]/Conv2d[conv1]/ret.107(ResNet::nndct_conv2d_41)
        self.module_42 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[2]/ReLU[relu]/ret.111(ResNet::nndct_relu_42)
        self.module_43 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[2]/Conv2d[conv2]/ret.113(ResNet::nndct_conv2d_43)
        self.module_44 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[2]/ReLU[relu]/ret.117(ResNet::nndct_relu_44)
        self.module_45 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[2]/Conv2d[conv3]/ret.119(ResNet::nndct_conv2d_45)
        self.module_46 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer2]/block[2]/26656(ResNet::nndct_elemwise_add_46)
        self.module_47 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[2]/ReLU[relu]/ret.123(ResNet::nndct_relu_47)
        self.module_48 = py_nndct.nn.Conv2d(in_channels=512, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[3]/Conv2d[conv1]/ret.125(ResNet::nndct_conv2d_48)
        self.module_49 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[3]/ReLU[relu]/ret.129(ResNet::nndct_relu_49)
        self.module_50 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[3]/Conv2d[conv2]/ret.131(ResNet::nndct_conv2d_50)
        self.module_51 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[3]/ReLU[relu]/ret.135(ResNet::nndct_relu_51)
        self.module_52 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[3]/Conv2d[conv3]/ret.137(ResNet::nndct_conv2d_52)
        self.module_53 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer2]/block[3]/26742(ResNet::nndct_elemwise_add_53)
        self.module_54 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[3]/ReLU[relu]/ret.141(ResNet::nndct_relu_54)
        self.module_55 = py_nndct.nn.Conv2d(in_channels=512, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[4]/Conv2d[conv1]/ret.143(ResNet::nndct_conv2d_55)
        self.module_56 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[4]/ReLU[relu]/ret.147(ResNet::nndct_relu_56)
        self.module_57 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[4]/Conv2d[conv2]/ret.149(ResNet::nndct_conv2d_57)
        self.module_58 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[4]/ReLU[relu]/ret.153(ResNet::nndct_relu_58)
        self.module_59 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[4]/Conv2d[conv3]/ret.155(ResNet::nndct_conv2d_59)
        self.module_60 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer2]/block[4]/26828(ResNet::nndct_elemwise_add_60)
        self.module_61 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[4]/ReLU[relu]/ret.159(ResNet::nndct_relu_61)
        self.module_62 = py_nndct.nn.Conv2d(in_channels=512, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[5]/Conv2d[conv1]/ret.161(ResNet::nndct_conv2d_62)
        self.module_63 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[5]/ReLU[relu]/ret.165(ResNet::nndct_relu_63)
        self.module_64 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[5]/Conv2d[conv2]/ret.167(ResNet::nndct_conv2d_64)
        self.module_65 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[5]/ReLU[relu]/ret.171(ResNet::nndct_relu_65)
        self.module_66 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[5]/Conv2d[conv3]/ret.173(ResNet::nndct_conv2d_66)
        self.module_67 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer2]/block[5]/26914(ResNet::nndct_elemwise_add_67)
        self.module_68 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[5]/ReLU[relu]/ret.177(ResNet::nndct_relu_68)
        self.module_69 = py_nndct.nn.Conv2d(in_channels=512, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[6]/Conv2d[conv1]/ret.179(ResNet::nndct_conv2d_69)
        self.module_70 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[6]/ReLU[relu]/ret.183(ResNet::nndct_relu_70)
        self.module_71 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[6]/Conv2d[conv2]/ret.185(ResNet::nndct_conv2d_71)
        self.module_72 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[6]/ReLU[relu]/ret.189(ResNet::nndct_relu_72)
        self.module_73 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[6]/Conv2d[conv3]/ret.191(ResNet::nndct_conv2d_73)
        self.module_74 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer2]/block[6]/27000(ResNet::nndct_elemwise_add_74)
        self.module_75 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[6]/ReLU[relu]/ret.195(ResNet::nndct_relu_75)
        self.module_76 = py_nndct.nn.Conv2d(in_channels=512, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[7]/Conv2d[conv1]/ret.197(ResNet::nndct_conv2d_76)
        self.module_77 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[7]/ReLU[relu]/ret.201(ResNet::nndct_relu_77)
        self.module_78 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[7]/Conv2d[conv2]/ret.203(ResNet::nndct_conv2d_78)
        self.module_79 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[7]/ReLU[relu]/ret.207(ResNet::nndct_relu_79)
        self.module_80 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[7]/Conv2d[conv3]/ret.209(ResNet::nndct_conv2d_80)
        self.module_81 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer2]/block[7]/27086(ResNet::nndct_elemwise_add_81)
        self.module_82 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[7]/ReLU[relu]/ret.213(ResNet::nndct_relu_82)
        self.module_83 = py_nndct.nn.Conv2d(in_channels=512, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[0]/Conv2d[conv1]/ret.215(ResNet::nndct_conv2d_83)
        self.module_84 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[0]/ReLU[relu]/ret.219(ResNet::nndct_relu_84)
        self.module_85 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[0]/Conv2d[conv2]/ret.221(ResNet::nndct_conv2d_85)
        self.module_86 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[0]/ReLU[relu]/ret.225(ResNet::nndct_relu_86)
        self.module_87 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[0]/Conv2d[conv3]/ret.227(ResNet::nndct_conv2d_87)
        self.module_88 = py_nndct.nn.Conv2d(in_channels=512, out_channels=1024, kernel_size=[1, 1], stride=[2, 2], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[0]/Sequential[identity_downsample]/Conv2d[0]/ret.231(ResNet::nndct_conv2d_88)
        self.module_89 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[0]/27198(ResNet::nndct_elemwise_add_89)
        self.module_90 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[0]/ReLU[relu]/ret.235(ResNet::nndct_relu_90)
        self.module_91 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[1]/Conv2d[conv1]/ret.237(ResNet::nndct_conv2d_91)
        self.module_92 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[1]/ReLU[relu]/ret.241(ResNet::nndct_relu_92)
        self.module_93 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[1]/Conv2d[conv2]/ret.243(ResNet::nndct_conv2d_93)
        self.module_94 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[1]/ReLU[relu]/ret.247(ResNet::nndct_relu_94)
        self.module_95 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[1]/Conv2d[conv3]/ret.249(ResNet::nndct_conv2d_95)
        self.module_96 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[1]/27284(ResNet::nndct_elemwise_add_96)
        self.module_97 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[1]/ReLU[relu]/ret.253(ResNet::nndct_relu_97)
        self.module_98 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[2]/Conv2d[conv1]/ret.255(ResNet::nndct_conv2d_98)
        self.module_99 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[2]/ReLU[relu]/ret.259(ResNet::nndct_relu_99)
        self.module_100 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[2]/Conv2d[conv2]/ret.261(ResNet::nndct_conv2d_100)
        self.module_101 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[2]/ReLU[relu]/ret.265(ResNet::nndct_relu_101)
        self.module_102 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[2]/Conv2d[conv3]/ret.267(ResNet::nndct_conv2d_102)
        self.module_103 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[2]/27370(ResNet::nndct_elemwise_add_103)
        self.module_104 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[2]/ReLU[relu]/ret.271(ResNet::nndct_relu_104)
        self.module_105 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[3]/Conv2d[conv1]/ret.273(ResNet::nndct_conv2d_105)
        self.module_106 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[3]/ReLU[relu]/ret.277(ResNet::nndct_relu_106)
        self.module_107 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[3]/Conv2d[conv2]/ret.279(ResNet::nndct_conv2d_107)
        self.module_108 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[3]/ReLU[relu]/ret.283(ResNet::nndct_relu_108)
        self.module_109 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[3]/Conv2d[conv3]/ret.285(ResNet::nndct_conv2d_109)
        self.module_110 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[3]/27456(ResNet::nndct_elemwise_add_110)
        self.module_111 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[3]/ReLU[relu]/ret.289(ResNet::nndct_relu_111)
        self.module_112 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[4]/Conv2d[conv1]/ret.291(ResNet::nndct_conv2d_112)
        self.module_113 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[4]/ReLU[relu]/ret.295(ResNet::nndct_relu_113)
        self.module_114 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[4]/Conv2d[conv2]/ret.297(ResNet::nndct_conv2d_114)
        self.module_115 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[4]/ReLU[relu]/ret.301(ResNet::nndct_relu_115)
        self.module_116 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[4]/Conv2d[conv3]/ret.303(ResNet::nndct_conv2d_116)
        self.module_117 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[4]/27542(ResNet::nndct_elemwise_add_117)
        self.module_118 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[4]/ReLU[relu]/ret.307(ResNet::nndct_relu_118)
        self.module_119 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[5]/Conv2d[conv1]/ret.309(ResNet::nndct_conv2d_119)
        self.module_120 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[5]/ReLU[relu]/ret.313(ResNet::nndct_relu_120)
        self.module_121 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[5]/Conv2d[conv2]/ret.315(ResNet::nndct_conv2d_121)
        self.module_122 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[5]/ReLU[relu]/ret.319(ResNet::nndct_relu_122)
        self.module_123 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[5]/Conv2d[conv3]/ret.321(ResNet::nndct_conv2d_123)
        self.module_124 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[5]/27628(ResNet::nndct_elemwise_add_124)
        self.module_125 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[5]/ReLU[relu]/ret.325(ResNet::nndct_relu_125)
        self.module_126 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[6]/Conv2d[conv1]/ret.327(ResNet::nndct_conv2d_126)
        self.module_127 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[6]/ReLU[relu]/ret.331(ResNet::nndct_relu_127)
        self.module_128 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[6]/Conv2d[conv2]/ret.333(ResNet::nndct_conv2d_128)
        self.module_129 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[6]/ReLU[relu]/ret.337(ResNet::nndct_relu_129)
        self.module_130 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[6]/Conv2d[conv3]/ret.339(ResNet::nndct_conv2d_130)
        self.module_131 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[6]/27714(ResNet::nndct_elemwise_add_131)
        self.module_132 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[6]/ReLU[relu]/ret.343(ResNet::nndct_relu_132)
        self.module_133 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[7]/Conv2d[conv1]/ret.345(ResNet::nndct_conv2d_133)
        self.module_134 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[7]/ReLU[relu]/ret.349(ResNet::nndct_relu_134)
        self.module_135 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[7]/Conv2d[conv2]/ret.351(ResNet::nndct_conv2d_135)
        self.module_136 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[7]/ReLU[relu]/ret.355(ResNet::nndct_relu_136)
        self.module_137 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[7]/Conv2d[conv3]/ret.357(ResNet::nndct_conv2d_137)
        self.module_138 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[7]/27800(ResNet::nndct_elemwise_add_138)
        self.module_139 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[7]/ReLU[relu]/ret.361(ResNet::nndct_relu_139)
        self.module_140 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[8]/Conv2d[conv1]/ret.363(ResNet::nndct_conv2d_140)
        self.module_141 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[8]/ReLU[relu]/ret.367(ResNet::nndct_relu_141)
        self.module_142 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[8]/Conv2d[conv2]/ret.369(ResNet::nndct_conv2d_142)
        self.module_143 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[8]/ReLU[relu]/ret.373(ResNet::nndct_relu_143)
        self.module_144 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[8]/Conv2d[conv3]/ret.375(ResNet::nndct_conv2d_144)
        self.module_145 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[8]/27886(ResNet::nndct_elemwise_add_145)
        self.module_146 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[8]/ReLU[relu]/ret.379(ResNet::nndct_relu_146)
        self.module_147 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[9]/Conv2d[conv1]/ret.381(ResNet::nndct_conv2d_147)
        self.module_148 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[9]/ReLU[relu]/ret.385(ResNet::nndct_relu_148)
        self.module_149 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[9]/Conv2d[conv2]/ret.387(ResNet::nndct_conv2d_149)
        self.module_150 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[9]/ReLU[relu]/ret.391(ResNet::nndct_relu_150)
        self.module_151 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[9]/Conv2d[conv3]/ret.393(ResNet::nndct_conv2d_151)
        self.module_152 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[9]/27972(ResNet::nndct_elemwise_add_152)
        self.module_153 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[9]/ReLU[relu]/ret.397(ResNet::nndct_relu_153)
        self.module_154 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[10]/Conv2d[conv1]/ret.399(ResNet::nndct_conv2d_154)
        self.module_155 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[10]/ReLU[relu]/ret.403(ResNet::nndct_relu_155)
        self.module_156 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[10]/Conv2d[conv2]/ret.405(ResNet::nndct_conv2d_156)
        self.module_157 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[10]/ReLU[relu]/ret.409(ResNet::nndct_relu_157)
        self.module_158 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[10]/Conv2d[conv3]/ret.411(ResNet::nndct_conv2d_158)
        self.module_159 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[10]/28058(ResNet::nndct_elemwise_add_159)
        self.module_160 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[10]/ReLU[relu]/ret.415(ResNet::nndct_relu_160)
        self.module_161 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[11]/Conv2d[conv1]/ret.417(ResNet::nndct_conv2d_161)
        self.module_162 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[11]/ReLU[relu]/ret.421(ResNet::nndct_relu_162)
        self.module_163 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[11]/Conv2d[conv2]/ret.423(ResNet::nndct_conv2d_163)
        self.module_164 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[11]/ReLU[relu]/ret.427(ResNet::nndct_relu_164)
        self.module_165 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[11]/Conv2d[conv3]/ret.429(ResNet::nndct_conv2d_165)
        self.module_166 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[11]/28144(ResNet::nndct_elemwise_add_166)
        self.module_167 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[11]/ReLU[relu]/ret.433(ResNet::nndct_relu_167)
        self.module_168 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[12]/Conv2d[conv1]/ret.435(ResNet::nndct_conv2d_168)
        self.module_169 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[12]/ReLU[relu]/ret.439(ResNet::nndct_relu_169)
        self.module_170 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[12]/Conv2d[conv2]/ret.441(ResNet::nndct_conv2d_170)
        self.module_171 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[12]/ReLU[relu]/ret.445(ResNet::nndct_relu_171)
        self.module_172 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[12]/Conv2d[conv3]/ret.447(ResNet::nndct_conv2d_172)
        self.module_173 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[12]/28230(ResNet::nndct_elemwise_add_173)
        self.module_174 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[12]/ReLU[relu]/ret.451(ResNet::nndct_relu_174)
        self.module_175 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[13]/Conv2d[conv1]/ret.453(ResNet::nndct_conv2d_175)
        self.module_176 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[13]/ReLU[relu]/ret.457(ResNet::nndct_relu_176)
        self.module_177 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[13]/Conv2d[conv2]/ret.459(ResNet::nndct_conv2d_177)
        self.module_178 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[13]/ReLU[relu]/ret.463(ResNet::nndct_relu_178)
        self.module_179 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[13]/Conv2d[conv3]/ret.465(ResNet::nndct_conv2d_179)
        self.module_180 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[13]/28316(ResNet::nndct_elemwise_add_180)
        self.module_181 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[13]/ReLU[relu]/ret.469(ResNet::nndct_relu_181)
        self.module_182 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[14]/Conv2d[conv1]/ret.471(ResNet::nndct_conv2d_182)
        self.module_183 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[14]/ReLU[relu]/ret.475(ResNet::nndct_relu_183)
        self.module_184 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[14]/Conv2d[conv2]/ret.477(ResNet::nndct_conv2d_184)
        self.module_185 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[14]/ReLU[relu]/ret.481(ResNet::nndct_relu_185)
        self.module_186 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[14]/Conv2d[conv3]/ret.483(ResNet::nndct_conv2d_186)
        self.module_187 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[14]/28402(ResNet::nndct_elemwise_add_187)
        self.module_188 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[14]/ReLU[relu]/ret.487(ResNet::nndct_relu_188)
        self.module_189 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[15]/Conv2d[conv1]/ret.489(ResNet::nndct_conv2d_189)
        self.module_190 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[15]/ReLU[relu]/ret.493(ResNet::nndct_relu_190)
        self.module_191 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[15]/Conv2d[conv2]/ret.495(ResNet::nndct_conv2d_191)
        self.module_192 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[15]/ReLU[relu]/ret.499(ResNet::nndct_relu_192)
        self.module_193 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[15]/Conv2d[conv3]/ret.501(ResNet::nndct_conv2d_193)
        self.module_194 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[15]/28488(ResNet::nndct_elemwise_add_194)
        self.module_195 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[15]/ReLU[relu]/ret.505(ResNet::nndct_relu_195)
        self.module_196 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[16]/Conv2d[conv1]/ret.507(ResNet::nndct_conv2d_196)
        self.module_197 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[16]/ReLU[relu]/ret.511(ResNet::nndct_relu_197)
        self.module_198 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[16]/Conv2d[conv2]/ret.513(ResNet::nndct_conv2d_198)
        self.module_199 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[16]/ReLU[relu]/ret.517(ResNet::nndct_relu_199)
        self.module_200 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[16]/Conv2d[conv3]/ret.519(ResNet::nndct_conv2d_200)
        self.module_201 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[16]/28574(ResNet::nndct_elemwise_add_201)
        self.module_202 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[16]/ReLU[relu]/ret.523(ResNet::nndct_relu_202)
        self.module_203 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[17]/Conv2d[conv1]/ret.525(ResNet::nndct_conv2d_203)
        self.module_204 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[17]/ReLU[relu]/ret.529(ResNet::nndct_relu_204)
        self.module_205 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[17]/Conv2d[conv2]/ret.531(ResNet::nndct_conv2d_205)
        self.module_206 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[17]/ReLU[relu]/ret.535(ResNet::nndct_relu_206)
        self.module_207 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[17]/Conv2d[conv3]/ret.537(ResNet::nndct_conv2d_207)
        self.module_208 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[17]/28660(ResNet::nndct_elemwise_add_208)
        self.module_209 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[17]/ReLU[relu]/ret.541(ResNet::nndct_relu_209)
        self.module_210 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[18]/Conv2d[conv1]/ret.543(ResNet::nndct_conv2d_210)
        self.module_211 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[18]/ReLU[relu]/ret.547(ResNet::nndct_relu_211)
        self.module_212 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[18]/Conv2d[conv2]/ret.549(ResNet::nndct_conv2d_212)
        self.module_213 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[18]/ReLU[relu]/ret.553(ResNet::nndct_relu_213)
        self.module_214 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[18]/Conv2d[conv3]/ret.555(ResNet::nndct_conv2d_214)
        self.module_215 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[18]/28746(ResNet::nndct_elemwise_add_215)
        self.module_216 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[18]/ReLU[relu]/ret.559(ResNet::nndct_relu_216)
        self.module_217 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[19]/Conv2d[conv1]/ret.561(ResNet::nndct_conv2d_217)
        self.module_218 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[19]/ReLU[relu]/ret.565(ResNet::nndct_relu_218)
        self.module_219 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[19]/Conv2d[conv2]/ret.567(ResNet::nndct_conv2d_219)
        self.module_220 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[19]/ReLU[relu]/ret.571(ResNet::nndct_relu_220)
        self.module_221 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[19]/Conv2d[conv3]/ret.573(ResNet::nndct_conv2d_221)
        self.module_222 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[19]/28832(ResNet::nndct_elemwise_add_222)
        self.module_223 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[19]/ReLU[relu]/ret.577(ResNet::nndct_relu_223)
        self.module_224 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[20]/Conv2d[conv1]/ret.579(ResNet::nndct_conv2d_224)
        self.module_225 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[20]/ReLU[relu]/ret.583(ResNet::nndct_relu_225)
        self.module_226 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[20]/Conv2d[conv2]/ret.585(ResNet::nndct_conv2d_226)
        self.module_227 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[20]/ReLU[relu]/ret.589(ResNet::nndct_relu_227)
        self.module_228 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[20]/Conv2d[conv3]/ret.591(ResNet::nndct_conv2d_228)
        self.module_229 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[20]/28918(ResNet::nndct_elemwise_add_229)
        self.module_230 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[20]/ReLU[relu]/ret.595(ResNet::nndct_relu_230)
        self.module_231 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[21]/Conv2d[conv1]/ret.597(ResNet::nndct_conv2d_231)
        self.module_232 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[21]/ReLU[relu]/ret.601(ResNet::nndct_relu_232)
        self.module_233 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[21]/Conv2d[conv2]/ret.603(ResNet::nndct_conv2d_233)
        self.module_234 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[21]/ReLU[relu]/ret.607(ResNet::nndct_relu_234)
        self.module_235 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[21]/Conv2d[conv3]/ret.609(ResNet::nndct_conv2d_235)
        self.module_236 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[21]/29004(ResNet::nndct_elemwise_add_236)
        self.module_237 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[21]/ReLU[relu]/ret.613(ResNet::nndct_relu_237)
        self.module_238 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[22]/Conv2d[conv1]/ret.615(ResNet::nndct_conv2d_238)
        self.module_239 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[22]/ReLU[relu]/ret.619(ResNet::nndct_relu_239)
        self.module_240 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[22]/Conv2d[conv2]/ret.621(ResNet::nndct_conv2d_240)
        self.module_241 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[22]/ReLU[relu]/ret.625(ResNet::nndct_relu_241)
        self.module_242 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[22]/Conv2d[conv3]/ret.627(ResNet::nndct_conv2d_242)
        self.module_243 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[22]/29090(ResNet::nndct_elemwise_add_243)
        self.module_244 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[22]/ReLU[relu]/ret.631(ResNet::nndct_relu_244)
        self.module_245 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[23]/Conv2d[conv1]/ret.633(ResNet::nndct_conv2d_245)
        self.module_246 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[23]/ReLU[relu]/ret.637(ResNet::nndct_relu_246)
        self.module_247 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[23]/Conv2d[conv2]/ret.639(ResNet::nndct_conv2d_247)
        self.module_248 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[23]/ReLU[relu]/ret.643(ResNet::nndct_relu_248)
        self.module_249 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[23]/Conv2d[conv3]/ret.645(ResNet::nndct_conv2d_249)
        self.module_250 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[23]/29176(ResNet::nndct_elemwise_add_250)
        self.module_251 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[23]/ReLU[relu]/ret.649(ResNet::nndct_relu_251)
        self.module_252 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[24]/Conv2d[conv1]/ret.651(ResNet::nndct_conv2d_252)
        self.module_253 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[24]/ReLU[relu]/ret.655(ResNet::nndct_relu_253)
        self.module_254 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[24]/Conv2d[conv2]/ret.657(ResNet::nndct_conv2d_254)
        self.module_255 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[24]/ReLU[relu]/ret.661(ResNet::nndct_relu_255)
        self.module_256 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[24]/Conv2d[conv3]/ret.663(ResNet::nndct_conv2d_256)
        self.module_257 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[24]/29262(ResNet::nndct_elemwise_add_257)
        self.module_258 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[24]/ReLU[relu]/ret.667(ResNet::nndct_relu_258)
        self.module_259 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[25]/Conv2d[conv1]/ret.669(ResNet::nndct_conv2d_259)
        self.module_260 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[25]/ReLU[relu]/ret.673(ResNet::nndct_relu_260)
        self.module_261 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[25]/Conv2d[conv2]/ret.675(ResNet::nndct_conv2d_261)
        self.module_262 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[25]/ReLU[relu]/ret.679(ResNet::nndct_relu_262)
        self.module_263 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[25]/Conv2d[conv3]/ret.681(ResNet::nndct_conv2d_263)
        self.module_264 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[25]/29348(ResNet::nndct_elemwise_add_264)
        self.module_265 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[25]/ReLU[relu]/ret.685(ResNet::nndct_relu_265)
        self.module_266 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[26]/Conv2d[conv1]/ret.687(ResNet::nndct_conv2d_266)
        self.module_267 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[26]/ReLU[relu]/ret.691(ResNet::nndct_relu_267)
        self.module_268 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[26]/Conv2d[conv2]/ret.693(ResNet::nndct_conv2d_268)
        self.module_269 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[26]/ReLU[relu]/ret.697(ResNet::nndct_relu_269)
        self.module_270 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[26]/Conv2d[conv3]/ret.699(ResNet::nndct_conv2d_270)
        self.module_271 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[26]/29434(ResNet::nndct_elemwise_add_271)
        self.module_272 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[26]/ReLU[relu]/ret.703(ResNet::nndct_relu_272)
        self.module_273 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[27]/Conv2d[conv1]/ret.705(ResNet::nndct_conv2d_273)
        self.module_274 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[27]/ReLU[relu]/ret.709(ResNet::nndct_relu_274)
        self.module_275 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[27]/Conv2d[conv2]/ret.711(ResNet::nndct_conv2d_275)
        self.module_276 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[27]/ReLU[relu]/ret.715(ResNet::nndct_relu_276)
        self.module_277 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[27]/Conv2d[conv3]/ret.717(ResNet::nndct_conv2d_277)
        self.module_278 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[27]/29520(ResNet::nndct_elemwise_add_278)
        self.module_279 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[27]/ReLU[relu]/ret.721(ResNet::nndct_relu_279)
        self.module_280 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[28]/Conv2d[conv1]/ret.723(ResNet::nndct_conv2d_280)
        self.module_281 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[28]/ReLU[relu]/ret.727(ResNet::nndct_relu_281)
        self.module_282 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[28]/Conv2d[conv2]/ret.729(ResNet::nndct_conv2d_282)
        self.module_283 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[28]/ReLU[relu]/ret.733(ResNet::nndct_relu_283)
        self.module_284 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[28]/Conv2d[conv3]/ret.735(ResNet::nndct_conv2d_284)
        self.module_285 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[28]/29606(ResNet::nndct_elemwise_add_285)
        self.module_286 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[28]/ReLU[relu]/ret.739(ResNet::nndct_relu_286)
        self.module_287 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[29]/Conv2d[conv1]/ret.741(ResNet::nndct_conv2d_287)
        self.module_288 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[29]/ReLU[relu]/ret.745(ResNet::nndct_relu_288)
        self.module_289 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[29]/Conv2d[conv2]/ret.747(ResNet::nndct_conv2d_289)
        self.module_290 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[29]/ReLU[relu]/ret.751(ResNet::nndct_relu_290)
        self.module_291 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[29]/Conv2d[conv3]/ret.753(ResNet::nndct_conv2d_291)
        self.module_292 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[29]/29692(ResNet::nndct_elemwise_add_292)
        self.module_293 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[29]/ReLU[relu]/ret.757(ResNet::nndct_relu_293)
        self.module_294 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[30]/Conv2d[conv1]/ret.759(ResNet::nndct_conv2d_294)
        self.module_295 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[30]/ReLU[relu]/ret.763(ResNet::nndct_relu_295)
        self.module_296 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[30]/Conv2d[conv2]/ret.765(ResNet::nndct_conv2d_296)
        self.module_297 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[30]/ReLU[relu]/ret.769(ResNet::nndct_relu_297)
        self.module_298 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[30]/Conv2d[conv3]/ret.771(ResNet::nndct_conv2d_298)
        self.module_299 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[30]/29778(ResNet::nndct_elemwise_add_299)
        self.module_300 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[30]/ReLU[relu]/ret.775(ResNet::nndct_relu_300)
        self.module_301 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[31]/Conv2d[conv1]/ret.777(ResNet::nndct_conv2d_301)
        self.module_302 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[31]/ReLU[relu]/ret.781(ResNet::nndct_relu_302)
        self.module_303 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[31]/Conv2d[conv2]/ret.783(ResNet::nndct_conv2d_303)
        self.module_304 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[31]/ReLU[relu]/ret.787(ResNet::nndct_relu_304)
        self.module_305 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[31]/Conv2d[conv3]/ret.789(ResNet::nndct_conv2d_305)
        self.module_306 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[31]/29864(ResNet::nndct_elemwise_add_306)
        self.module_307 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[31]/ReLU[relu]/ret.793(ResNet::nndct_relu_307)
        self.module_308 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[32]/Conv2d[conv1]/ret.795(ResNet::nndct_conv2d_308)
        self.module_309 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[32]/ReLU[relu]/ret.799(ResNet::nndct_relu_309)
        self.module_310 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[32]/Conv2d[conv2]/ret.801(ResNet::nndct_conv2d_310)
        self.module_311 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[32]/ReLU[relu]/ret.805(ResNet::nndct_relu_311)
        self.module_312 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[32]/Conv2d[conv3]/ret.807(ResNet::nndct_conv2d_312)
        self.module_313 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[32]/29950(ResNet::nndct_elemwise_add_313)
        self.module_314 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[32]/ReLU[relu]/ret.811(ResNet::nndct_relu_314)
        self.module_315 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[33]/Conv2d[conv1]/ret.813(ResNet::nndct_conv2d_315)
        self.module_316 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[33]/ReLU[relu]/ret.817(ResNet::nndct_relu_316)
        self.module_317 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[33]/Conv2d[conv2]/ret.819(ResNet::nndct_conv2d_317)
        self.module_318 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[33]/ReLU[relu]/ret.823(ResNet::nndct_relu_318)
        self.module_319 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[33]/Conv2d[conv3]/ret.825(ResNet::nndct_conv2d_319)
        self.module_320 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[33]/30036(ResNet::nndct_elemwise_add_320)
        self.module_321 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[33]/ReLU[relu]/ret.829(ResNet::nndct_relu_321)
        self.module_322 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[34]/Conv2d[conv1]/ret.831(ResNet::nndct_conv2d_322)
        self.module_323 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[34]/ReLU[relu]/ret.835(ResNet::nndct_relu_323)
        self.module_324 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[34]/Conv2d[conv2]/ret.837(ResNet::nndct_conv2d_324)
        self.module_325 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[34]/ReLU[relu]/ret.841(ResNet::nndct_relu_325)
        self.module_326 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[34]/Conv2d[conv3]/ret.843(ResNet::nndct_conv2d_326)
        self.module_327 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[34]/30122(ResNet::nndct_elemwise_add_327)
        self.module_328 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[34]/ReLU[relu]/ret.847(ResNet::nndct_relu_328)
        self.module_329 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[35]/Conv2d[conv1]/ret.849(ResNet::nndct_conv2d_329)
        self.module_330 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[35]/ReLU[relu]/ret.853(ResNet::nndct_relu_330)
        self.module_331 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[35]/Conv2d[conv2]/ret.855(ResNet::nndct_conv2d_331)
        self.module_332 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[35]/ReLU[relu]/ret.859(ResNet::nndct_relu_332)
        self.module_333 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[35]/Conv2d[conv3]/ret.861(ResNet::nndct_conv2d_333)
        self.module_334 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[35]/30208(ResNet::nndct_elemwise_add_334)
        self.module_335 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[35]/ReLU[relu]/ret.865(ResNet::nndct_relu_335)
        self.module_336 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[0]/Conv2d[conv1]/ret.867(ResNet::nndct_conv2d_336)
        self.module_337 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[0]/ReLU[relu]/ret.871(ResNet::nndct_relu_337)
        self.module_338 = py_nndct.nn.Conv2d(in_channels=512, out_channels=512, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[0]/Conv2d[conv2]/ret.873(ResNet::nndct_conv2d_338)
        self.module_339 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[0]/ReLU[relu]/ret.877(ResNet::nndct_relu_339)
        self.module_340 = py_nndct.nn.Conv2d(in_channels=512, out_channels=2048, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[0]/Conv2d[conv3]/ret.879(ResNet::nndct_conv2d_340)
        self.module_341 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=2048, kernel_size=[1, 1], stride=[2, 2], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[0]/Sequential[identity_downsample]/Conv2d[0]/ret.883(ResNet::nndct_conv2d_341)
        self.module_342 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer4]/block[0]/30320(ResNet::nndct_elemwise_add_342)
        self.module_343 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[0]/ReLU[relu]/ret.887(ResNet::nndct_relu_343)
        self.module_344 = py_nndct.nn.Conv2d(in_channels=2048, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[1]/Conv2d[conv1]/ret.889(ResNet::nndct_conv2d_344)
        self.module_345 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[1]/ReLU[relu]/ret.893(ResNet::nndct_relu_345)
        self.module_346 = py_nndct.nn.Conv2d(in_channels=512, out_channels=512, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[1]/Conv2d[conv2]/ret.895(ResNet::nndct_conv2d_346)
        self.module_347 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[1]/ReLU[relu]/ret.899(ResNet::nndct_relu_347)
        self.module_348 = py_nndct.nn.Conv2d(in_channels=512, out_channels=2048, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[1]/Conv2d[conv3]/ret.901(ResNet::nndct_conv2d_348)
        self.module_349 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer4]/block[1]/30406(ResNet::nndct_elemwise_add_349)
        self.module_350 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[1]/ReLU[relu]/ret.905(ResNet::nndct_relu_350)
        self.module_351 = py_nndct.nn.Conv2d(in_channels=2048, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[2]/Conv2d[conv1]/ret.907(ResNet::nndct_conv2d_351)
        self.module_352 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[2]/ReLU[relu]/ret.911(ResNet::nndct_relu_352)
        self.module_353 = py_nndct.nn.Conv2d(in_channels=512, out_channels=512, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[2]/Conv2d[conv2]/ret.913(ResNet::nndct_conv2d_353)
        self.module_354 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[2]/ReLU[relu]/ret.917(ResNet::nndct_relu_354)
        self.module_355 = py_nndct.nn.Conv2d(in_channels=512, out_channels=2048, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[2]/Conv2d[conv3]/ret.919(ResNet::nndct_conv2d_355)
        self.module_356 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer4]/block[2]/30492(ResNet::nndct_elemwise_add_356)
        self.module_357 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[2]/ReLU[relu]/ret.923(ResNet::nndct_relu_357)
        self.module_358 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #ResNet::ResNet/AdaptiveAvgPool2d[avgpool]/30511(ResNet::nndct_adaptive_avg_pool2d_358)
        self.module_359 = py_nndct.nn.Module('nndct_shape') #ResNet::ResNet/30514(ResNet::nndct_shape_359)
        self.module_360 = py_nndct.nn.Module('nndct_reshape') #ResNet::ResNet/ret.925(ResNet::nndct_reshape_360)
        self.module_361 = py_nndct.nn.Linear(in_features=2048, out_features=3, bias=True) #ResNet::ResNet/Linear[fc]/ret(ResNet::nndct_dense_361)

    @py_nndct.nn.forward_processor
    def forward(self, *args):
        output_module_0 = self.module_0(input=args[0])
        output_module_0 = self.module_1(output_module_0)
        output_module_0 = self.module_2(output_module_0)
        output_module_0 = self.module_3(output_module_0)
        output_module_4 = self.module_4(output_module_0)
        output_module_4 = self.module_5(output_module_4)
        output_module_4 = self.module_6(output_module_4)
        output_module_4 = self.module_7(output_module_4)
        output_module_4 = self.module_8(output_module_4)
        output_module_9 = self.module_9(output_module_0)
        output_module_4 = self.module_10(input=output_module_4, other=output_module_9, alpha=1)
        output_module_4 = self.module_11(output_module_4)
        output_module_12 = self.module_12(output_module_4)
        output_module_12 = self.module_13(output_module_12)
        output_module_12 = self.module_14(output_module_12)
        output_module_12 = self.module_15(output_module_12)
        output_module_12 = self.module_16(output_module_12)
        output_module_12 = self.module_17(input=output_module_12, other=output_module_4, alpha=1)
        output_module_12 = self.module_18(output_module_12)
        output_module_19 = self.module_19(output_module_12)
        output_module_19 = self.module_20(output_module_19)
        output_module_19 = self.module_21(output_module_19)
        output_module_19 = self.module_22(output_module_19)
        output_module_19 = self.module_23(output_module_19)
        output_module_19 = self.module_24(input=output_module_19, other=output_module_12, alpha=1)
        output_module_19 = self.module_25(output_module_19)
        output_module_26 = self.module_26(output_module_19)
        output_module_26 = self.module_27(output_module_26)
        output_module_26 = self.module_28(output_module_26)
        output_module_26 = self.module_29(output_module_26)
        output_module_26 = self.module_30(output_module_26)
        output_module_31 = self.module_31(output_module_19)
        output_module_26 = self.module_32(input=output_module_26, other=output_module_31, alpha=1)
        output_module_26 = self.module_33(output_module_26)
        output_module_34 = self.module_34(output_module_26)
        output_module_34 = self.module_35(output_module_34)
        output_module_34 = self.module_36(output_module_34)
        output_module_34 = self.module_37(output_module_34)
        output_module_34 = self.module_38(output_module_34)
        output_module_34 = self.module_39(input=output_module_34, other=output_module_26, alpha=1)
        output_module_34 = self.module_40(output_module_34)
        output_module_41 = self.module_41(output_module_34)
        output_module_41 = self.module_42(output_module_41)
        output_module_41 = self.module_43(output_module_41)
        output_module_41 = self.module_44(output_module_41)
        output_module_41 = self.module_45(output_module_41)
        output_module_41 = self.module_46(input=output_module_41, other=output_module_34, alpha=1)
        output_module_41 = self.module_47(output_module_41)
        output_module_48 = self.module_48(output_module_41)
        output_module_48 = self.module_49(output_module_48)
        output_module_48 = self.module_50(output_module_48)
        output_module_48 = self.module_51(output_module_48)
        output_module_48 = self.module_52(output_module_48)
        output_module_48 = self.module_53(input=output_module_48, other=output_module_41, alpha=1)
        output_module_48 = self.module_54(output_module_48)
        output_module_55 = self.module_55(output_module_48)
        output_module_55 = self.module_56(output_module_55)
        output_module_55 = self.module_57(output_module_55)
        output_module_55 = self.module_58(output_module_55)
        output_module_55 = self.module_59(output_module_55)
        output_module_55 = self.module_60(input=output_module_55, other=output_module_48, alpha=1)
        output_module_55 = self.module_61(output_module_55)
        output_module_62 = self.module_62(output_module_55)
        output_module_62 = self.module_63(output_module_62)
        output_module_62 = self.module_64(output_module_62)
        output_module_62 = self.module_65(output_module_62)
        output_module_62 = self.module_66(output_module_62)
        output_module_62 = self.module_67(input=output_module_62, other=output_module_55, alpha=1)
        output_module_62 = self.module_68(output_module_62)
        output_module_69 = self.module_69(output_module_62)
        output_module_69 = self.module_70(output_module_69)
        output_module_69 = self.module_71(output_module_69)
        output_module_69 = self.module_72(output_module_69)
        output_module_69 = self.module_73(output_module_69)
        output_module_69 = self.module_74(input=output_module_69, other=output_module_62, alpha=1)
        output_module_69 = self.module_75(output_module_69)
        output_module_76 = self.module_76(output_module_69)
        output_module_76 = self.module_77(output_module_76)
        output_module_76 = self.module_78(output_module_76)
        output_module_76 = self.module_79(output_module_76)
        output_module_76 = self.module_80(output_module_76)
        output_module_76 = self.module_81(input=output_module_76, other=output_module_69, alpha=1)
        output_module_76 = self.module_82(output_module_76)
        output_module_83 = self.module_83(output_module_76)
        output_module_83 = self.module_84(output_module_83)
        output_module_83 = self.module_85(output_module_83)
        output_module_83 = self.module_86(output_module_83)
        output_module_83 = self.module_87(output_module_83)
        output_module_88 = self.module_88(output_module_76)
        output_module_83 = self.module_89(input=output_module_83, other=output_module_88, alpha=1)
        output_module_83 = self.module_90(output_module_83)
        output_module_91 = self.module_91(output_module_83)
        output_module_91 = self.module_92(output_module_91)
        output_module_91 = self.module_93(output_module_91)
        output_module_91 = self.module_94(output_module_91)
        output_module_91 = self.module_95(output_module_91)
        output_module_91 = self.module_96(input=output_module_91, other=output_module_83, alpha=1)
        output_module_91 = self.module_97(output_module_91)
        output_module_98 = self.module_98(output_module_91)
        output_module_98 = self.module_99(output_module_98)
        output_module_98 = self.module_100(output_module_98)
        output_module_98 = self.module_101(output_module_98)
        output_module_98 = self.module_102(output_module_98)
        output_module_98 = self.module_103(input=output_module_98, other=output_module_91, alpha=1)
        output_module_98 = self.module_104(output_module_98)
        output_module_105 = self.module_105(output_module_98)
        output_module_105 = self.module_106(output_module_105)
        output_module_105 = self.module_107(output_module_105)
        output_module_105 = self.module_108(output_module_105)
        output_module_105 = self.module_109(output_module_105)
        output_module_105 = self.module_110(input=output_module_105, other=output_module_98, alpha=1)
        output_module_105 = self.module_111(output_module_105)
        output_module_112 = self.module_112(output_module_105)
        output_module_112 = self.module_113(output_module_112)
        output_module_112 = self.module_114(output_module_112)
        output_module_112 = self.module_115(output_module_112)
        output_module_112 = self.module_116(output_module_112)
        output_module_112 = self.module_117(input=output_module_112, other=output_module_105, alpha=1)
        output_module_112 = self.module_118(output_module_112)
        output_module_119 = self.module_119(output_module_112)
        output_module_119 = self.module_120(output_module_119)
        output_module_119 = self.module_121(output_module_119)
        output_module_119 = self.module_122(output_module_119)
        output_module_119 = self.module_123(output_module_119)
        output_module_119 = self.module_124(input=output_module_119, other=output_module_112, alpha=1)
        output_module_119 = self.module_125(output_module_119)
        output_module_126 = self.module_126(output_module_119)
        output_module_126 = self.module_127(output_module_126)
        output_module_126 = self.module_128(output_module_126)
        output_module_126 = self.module_129(output_module_126)
        output_module_126 = self.module_130(output_module_126)
        output_module_126 = self.module_131(input=output_module_126, other=output_module_119, alpha=1)
        output_module_126 = self.module_132(output_module_126)
        output_module_133 = self.module_133(output_module_126)
        output_module_133 = self.module_134(output_module_133)
        output_module_133 = self.module_135(output_module_133)
        output_module_133 = self.module_136(output_module_133)
        output_module_133 = self.module_137(output_module_133)
        output_module_133 = self.module_138(input=output_module_133, other=output_module_126, alpha=1)
        output_module_133 = self.module_139(output_module_133)
        output_module_140 = self.module_140(output_module_133)
        output_module_140 = self.module_141(output_module_140)
        output_module_140 = self.module_142(output_module_140)
        output_module_140 = self.module_143(output_module_140)
        output_module_140 = self.module_144(output_module_140)
        output_module_140 = self.module_145(input=output_module_140, other=output_module_133, alpha=1)
        output_module_140 = self.module_146(output_module_140)
        output_module_147 = self.module_147(output_module_140)
        output_module_147 = self.module_148(output_module_147)
        output_module_147 = self.module_149(output_module_147)
        output_module_147 = self.module_150(output_module_147)
        output_module_147 = self.module_151(output_module_147)
        output_module_147 = self.module_152(input=output_module_147, other=output_module_140, alpha=1)
        output_module_147 = self.module_153(output_module_147)
        output_module_154 = self.module_154(output_module_147)
        output_module_154 = self.module_155(output_module_154)
        output_module_154 = self.module_156(output_module_154)
        output_module_154 = self.module_157(output_module_154)
        output_module_154 = self.module_158(output_module_154)
        output_module_154 = self.module_159(input=output_module_154, other=output_module_147, alpha=1)
        output_module_154 = self.module_160(output_module_154)
        output_module_161 = self.module_161(output_module_154)
        output_module_161 = self.module_162(output_module_161)
        output_module_161 = self.module_163(output_module_161)
        output_module_161 = self.module_164(output_module_161)
        output_module_161 = self.module_165(output_module_161)
        output_module_161 = self.module_166(input=output_module_161, other=output_module_154, alpha=1)
        output_module_161 = self.module_167(output_module_161)
        output_module_168 = self.module_168(output_module_161)
        output_module_168 = self.module_169(output_module_168)
        output_module_168 = self.module_170(output_module_168)
        output_module_168 = self.module_171(output_module_168)
        output_module_168 = self.module_172(output_module_168)
        output_module_168 = self.module_173(input=output_module_168, other=output_module_161, alpha=1)
        output_module_168 = self.module_174(output_module_168)
        output_module_175 = self.module_175(output_module_168)
        output_module_175 = self.module_176(output_module_175)
        output_module_175 = self.module_177(output_module_175)
        output_module_175 = self.module_178(output_module_175)
        output_module_175 = self.module_179(output_module_175)
        output_module_175 = self.module_180(input=output_module_175, other=output_module_168, alpha=1)
        output_module_175 = self.module_181(output_module_175)
        output_module_182 = self.module_182(output_module_175)
        output_module_182 = self.module_183(output_module_182)
        output_module_182 = self.module_184(output_module_182)
        output_module_182 = self.module_185(output_module_182)
        output_module_182 = self.module_186(output_module_182)
        output_module_182 = self.module_187(input=output_module_182, other=output_module_175, alpha=1)
        output_module_182 = self.module_188(output_module_182)
        output_module_189 = self.module_189(output_module_182)
        output_module_189 = self.module_190(output_module_189)
        output_module_189 = self.module_191(output_module_189)
        output_module_189 = self.module_192(output_module_189)
        output_module_189 = self.module_193(output_module_189)
        output_module_189 = self.module_194(input=output_module_189, other=output_module_182, alpha=1)
        output_module_189 = self.module_195(output_module_189)
        output_module_196 = self.module_196(output_module_189)
        output_module_196 = self.module_197(output_module_196)
        output_module_196 = self.module_198(output_module_196)
        output_module_196 = self.module_199(output_module_196)
        output_module_196 = self.module_200(output_module_196)
        output_module_196 = self.module_201(input=output_module_196, other=output_module_189, alpha=1)
        output_module_196 = self.module_202(output_module_196)
        output_module_203 = self.module_203(output_module_196)
        output_module_203 = self.module_204(output_module_203)
        output_module_203 = self.module_205(output_module_203)
        output_module_203 = self.module_206(output_module_203)
        output_module_203 = self.module_207(output_module_203)
        output_module_203 = self.module_208(input=output_module_203, other=output_module_196, alpha=1)
        output_module_203 = self.module_209(output_module_203)
        output_module_210 = self.module_210(output_module_203)
        output_module_210 = self.module_211(output_module_210)
        output_module_210 = self.module_212(output_module_210)
        output_module_210 = self.module_213(output_module_210)
        output_module_210 = self.module_214(output_module_210)
        output_module_210 = self.module_215(input=output_module_210, other=output_module_203, alpha=1)
        output_module_210 = self.module_216(output_module_210)
        output_module_217 = self.module_217(output_module_210)
        output_module_217 = self.module_218(output_module_217)
        output_module_217 = self.module_219(output_module_217)
        output_module_217 = self.module_220(output_module_217)
        output_module_217 = self.module_221(output_module_217)
        output_module_217 = self.module_222(input=output_module_217, other=output_module_210, alpha=1)
        output_module_217 = self.module_223(output_module_217)
        output_module_224 = self.module_224(output_module_217)
        output_module_224 = self.module_225(output_module_224)
        output_module_224 = self.module_226(output_module_224)
        output_module_224 = self.module_227(output_module_224)
        output_module_224 = self.module_228(output_module_224)
        output_module_224 = self.module_229(input=output_module_224, other=output_module_217, alpha=1)
        output_module_224 = self.module_230(output_module_224)
        output_module_231 = self.module_231(output_module_224)
        output_module_231 = self.module_232(output_module_231)
        output_module_231 = self.module_233(output_module_231)
        output_module_231 = self.module_234(output_module_231)
        output_module_231 = self.module_235(output_module_231)
        output_module_231 = self.module_236(input=output_module_231, other=output_module_224, alpha=1)
        output_module_231 = self.module_237(output_module_231)
        output_module_238 = self.module_238(output_module_231)
        output_module_238 = self.module_239(output_module_238)
        output_module_238 = self.module_240(output_module_238)
        output_module_238 = self.module_241(output_module_238)
        output_module_238 = self.module_242(output_module_238)
        output_module_238 = self.module_243(input=output_module_238, other=output_module_231, alpha=1)
        output_module_238 = self.module_244(output_module_238)
        output_module_245 = self.module_245(output_module_238)
        output_module_245 = self.module_246(output_module_245)
        output_module_245 = self.module_247(output_module_245)
        output_module_245 = self.module_248(output_module_245)
        output_module_245 = self.module_249(output_module_245)
        output_module_245 = self.module_250(input=output_module_245, other=output_module_238, alpha=1)
        output_module_245 = self.module_251(output_module_245)
        output_module_252 = self.module_252(output_module_245)
        output_module_252 = self.module_253(output_module_252)
        output_module_252 = self.module_254(output_module_252)
        output_module_252 = self.module_255(output_module_252)
        output_module_252 = self.module_256(output_module_252)
        output_module_252 = self.module_257(input=output_module_252, other=output_module_245, alpha=1)
        output_module_252 = self.module_258(output_module_252)
        output_module_259 = self.module_259(output_module_252)
        output_module_259 = self.module_260(output_module_259)
        output_module_259 = self.module_261(output_module_259)
        output_module_259 = self.module_262(output_module_259)
        output_module_259 = self.module_263(output_module_259)
        output_module_259 = self.module_264(input=output_module_259, other=output_module_252, alpha=1)
        output_module_259 = self.module_265(output_module_259)
        output_module_266 = self.module_266(output_module_259)
        output_module_266 = self.module_267(output_module_266)
        output_module_266 = self.module_268(output_module_266)
        output_module_266 = self.module_269(output_module_266)
        output_module_266 = self.module_270(output_module_266)
        output_module_266 = self.module_271(input=output_module_266, other=output_module_259, alpha=1)
        output_module_266 = self.module_272(output_module_266)
        output_module_273 = self.module_273(output_module_266)
        output_module_273 = self.module_274(output_module_273)
        output_module_273 = self.module_275(output_module_273)
        output_module_273 = self.module_276(output_module_273)
        output_module_273 = self.module_277(output_module_273)
        output_module_273 = self.module_278(input=output_module_273, other=output_module_266, alpha=1)
        output_module_273 = self.module_279(output_module_273)
        output_module_280 = self.module_280(output_module_273)
        output_module_280 = self.module_281(output_module_280)
        output_module_280 = self.module_282(output_module_280)
        output_module_280 = self.module_283(output_module_280)
        output_module_280 = self.module_284(output_module_280)
        output_module_280 = self.module_285(input=output_module_280, other=output_module_273, alpha=1)
        output_module_280 = self.module_286(output_module_280)
        output_module_287 = self.module_287(output_module_280)
        output_module_287 = self.module_288(output_module_287)
        output_module_287 = self.module_289(output_module_287)
        output_module_287 = self.module_290(output_module_287)
        output_module_287 = self.module_291(output_module_287)
        output_module_287 = self.module_292(input=output_module_287, other=output_module_280, alpha=1)
        output_module_287 = self.module_293(output_module_287)
        output_module_294 = self.module_294(output_module_287)
        output_module_294 = self.module_295(output_module_294)
        output_module_294 = self.module_296(output_module_294)
        output_module_294 = self.module_297(output_module_294)
        output_module_294 = self.module_298(output_module_294)
        output_module_294 = self.module_299(input=output_module_294, other=output_module_287, alpha=1)
        output_module_294 = self.module_300(output_module_294)
        output_module_301 = self.module_301(output_module_294)
        output_module_301 = self.module_302(output_module_301)
        output_module_301 = self.module_303(output_module_301)
        output_module_301 = self.module_304(output_module_301)
        output_module_301 = self.module_305(output_module_301)
        output_module_301 = self.module_306(input=output_module_301, other=output_module_294, alpha=1)
        output_module_301 = self.module_307(output_module_301)
        output_module_308 = self.module_308(output_module_301)
        output_module_308 = self.module_309(output_module_308)
        output_module_308 = self.module_310(output_module_308)
        output_module_308 = self.module_311(output_module_308)
        output_module_308 = self.module_312(output_module_308)
        output_module_308 = self.module_313(input=output_module_308, other=output_module_301, alpha=1)
        output_module_308 = self.module_314(output_module_308)
        output_module_315 = self.module_315(output_module_308)
        output_module_315 = self.module_316(output_module_315)
        output_module_315 = self.module_317(output_module_315)
        output_module_315 = self.module_318(output_module_315)
        output_module_315 = self.module_319(output_module_315)
        output_module_315 = self.module_320(input=output_module_315, other=output_module_308, alpha=1)
        output_module_315 = self.module_321(output_module_315)
        output_module_322 = self.module_322(output_module_315)
        output_module_322 = self.module_323(output_module_322)
        output_module_322 = self.module_324(output_module_322)
        output_module_322 = self.module_325(output_module_322)
        output_module_322 = self.module_326(output_module_322)
        output_module_322 = self.module_327(input=output_module_322, other=output_module_315, alpha=1)
        output_module_322 = self.module_328(output_module_322)
        output_module_329 = self.module_329(output_module_322)
        output_module_329 = self.module_330(output_module_329)
        output_module_329 = self.module_331(output_module_329)
        output_module_329 = self.module_332(output_module_329)
        output_module_329 = self.module_333(output_module_329)
        output_module_329 = self.module_334(input=output_module_329, other=output_module_322, alpha=1)
        output_module_329 = self.module_335(output_module_329)
        output_module_336 = self.module_336(output_module_329)
        output_module_336 = self.module_337(output_module_336)
        output_module_336 = self.module_338(output_module_336)
        output_module_336 = self.module_339(output_module_336)
        output_module_336 = self.module_340(output_module_336)
        output_module_341 = self.module_341(output_module_329)
        output_module_336 = self.module_342(input=output_module_336, other=output_module_341, alpha=1)
        output_module_336 = self.module_343(output_module_336)
        output_module_344 = self.module_344(output_module_336)
        output_module_344 = self.module_345(output_module_344)
        output_module_344 = self.module_346(output_module_344)
        output_module_344 = self.module_347(output_module_344)
        output_module_344 = self.module_348(output_module_344)
        output_module_344 = self.module_349(input=output_module_344, other=output_module_336, alpha=1)
        output_module_344 = self.module_350(output_module_344)
        output_module_351 = self.module_351(output_module_344)
        output_module_351 = self.module_352(output_module_351)
        output_module_351 = self.module_353(output_module_351)
        output_module_351 = self.module_354(output_module_351)
        output_module_351 = self.module_355(output_module_351)
        output_module_351 = self.module_356(input=output_module_351, other=output_module_344, alpha=1)
        output_module_351 = self.module_357(output_module_351)
        output_module_351 = self.module_358(output_module_351)
        output_module_359 = self.module_359(input=output_module_351, dim=0)
        output_module_360 = self.module_360(input=output_module_351, shape=[output_module_359,-1])
        output_module_360 = self.module_361(output_module_360)
        return output_module_360
