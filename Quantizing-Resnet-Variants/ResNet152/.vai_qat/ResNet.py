# GENETARED BY NNDCT, DO NOT EDIT!

import torch
from torch import tensor
import pytorch_nndct as py_nndct

class ResNet(py_nndct.nn.NndctQuantModel):
    def __init__(self):
        super(ResNet, self).__init__()
        self.module_0 = py_nndct.nn.Input() #ResNet::input_0(ResNet::nndct_input_0)
        self.module_1 = py_nndct.nn.quant_input() #ResNet::ResNet/QuantStub[quant_stub]/26073(ResNet::nndct_quant_stub_1)
        self.module_2 = py_nndct.nn.Conv2d(in_channels=3, out_channels=64, kernel_size=[7, 7], stride=[2, 2], padding=[3, 3], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Conv2d[conv1]/ret.5(ResNet::nndct_conv2d_2)
        self.module_3 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/ReLU[relu]/ret.9(ResNet::nndct_relu_3)
        self.module_4 = py_nndct.nn.MaxPool2d(kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], ceil_mode=False) #ResNet::ResNet/MaxPool2d[maxpool]/26119(ResNet::nndct_maxpool_4)
        self.module_5 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[0]/Conv2d[conv1]/ret.11(ResNet::nndct_conv2d_5)
        self.module_6 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[0]/ReLU[relu1]/ret.15(ResNet::nndct_relu_6)
        self.module_7 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[0]/Conv2d[conv2]/ret.17(ResNet::nndct_conv2d_7)
        self.module_8 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[0]/ReLU[relu2]/ret.21(ResNet::nndct_relu_8)
        self.module_9 = py_nndct.nn.Conv2d(in_channels=64, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[0]/Conv2d[conv3]/ret.23(ResNet::nndct_conv2d_9)
        self.module_10 = py_nndct.nn.Conv2d(in_channels=64, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[0]/Sequential[identity_downsample]/Conv2d[0]/ret.27(ResNet::nndct_conv2d_10)
        self.module_11 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer1]/block[0]/26230(ResNet::nndct_elemwise_add_11)
        self.module_12 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[0]/ReLU[relu3]/ret.31(ResNet::nndct_relu_12)
        self.module_13 = py_nndct.nn.Conv2d(in_channels=256, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[1]/Conv2d[conv1]/ret.33(ResNet::nndct_conv2d_13)
        self.module_14 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[1]/ReLU[relu1]/ret.37(ResNet::nndct_relu_14)
        self.module_15 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[1]/Conv2d[conv2]/ret.39(ResNet::nndct_conv2d_15)
        self.module_16 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[1]/ReLU[relu2]/ret.43(ResNet::nndct_relu_16)
        self.module_17 = py_nndct.nn.Conv2d(in_channels=64, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[1]/Conv2d[conv3]/ret.45(ResNet::nndct_conv2d_17)
        self.module_18 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer1]/block[1]/26316(ResNet::nndct_elemwise_add_18)
        self.module_19 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[1]/ReLU[relu3]/ret.49(ResNet::nndct_relu_19)
        self.module_20 = py_nndct.nn.Conv2d(in_channels=256, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[2]/Conv2d[conv1]/ret.51(ResNet::nndct_conv2d_20)
        self.module_21 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[2]/ReLU[relu1]/ret.55(ResNet::nndct_relu_21)
        self.module_22 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[2]/Conv2d[conv2]/ret.57(ResNet::nndct_conv2d_22)
        self.module_23 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[2]/ReLU[relu2]/ret.61(ResNet::nndct_relu_23)
        self.module_24 = py_nndct.nn.Conv2d(in_channels=64, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[2]/Conv2d[conv3]/ret.63(ResNet::nndct_conv2d_24)
        self.module_25 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer1]/block[2]/26402(ResNet::nndct_elemwise_add_25)
        self.module_26 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[2]/ReLU[relu3]/ret.67(ResNet::nndct_relu_26)
        self.module_27 = py_nndct.nn.Conv2d(in_channels=256, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[0]/Conv2d[conv1]/ret.69(ResNet::nndct_conv2d_27)
        self.module_28 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[0]/ReLU[relu1]/ret.73(ResNet::nndct_relu_28)
        self.module_29 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[0]/Conv2d[conv2]/ret.75(ResNet::nndct_conv2d_29)
        self.module_30 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[0]/ReLU[relu2]/ret.79(ResNet::nndct_relu_30)
        self.module_31 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[0]/Conv2d[conv3]/ret.81(ResNet::nndct_conv2d_31)
        self.module_32 = py_nndct.nn.Conv2d(in_channels=256, out_channels=512, kernel_size=[1, 1], stride=[2, 2], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[0]/Sequential[identity_downsample]/Conv2d[0]/ret.85(ResNet::nndct_conv2d_32)
        self.module_33 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer2]/block[0]/26514(ResNet::nndct_elemwise_add_33)
        self.module_34 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[0]/ReLU[relu3]/ret.89(ResNet::nndct_relu_34)
        self.module_35 = py_nndct.nn.Conv2d(in_channels=512, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[1]/Conv2d[conv1]/ret.91(ResNet::nndct_conv2d_35)
        self.module_36 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[1]/ReLU[relu1]/ret.95(ResNet::nndct_relu_36)
        self.module_37 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[1]/Conv2d[conv2]/ret.97(ResNet::nndct_conv2d_37)
        self.module_38 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[1]/ReLU[relu2]/ret.101(ResNet::nndct_relu_38)
        self.module_39 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[1]/Conv2d[conv3]/ret.103(ResNet::nndct_conv2d_39)
        self.module_40 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer2]/block[1]/26600(ResNet::nndct_elemwise_add_40)
        self.module_41 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[1]/ReLU[relu3]/ret.107(ResNet::nndct_relu_41)
        self.module_42 = py_nndct.nn.Conv2d(in_channels=512, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[2]/Conv2d[conv1]/ret.109(ResNet::nndct_conv2d_42)
        self.module_43 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[2]/ReLU[relu1]/ret.113(ResNet::nndct_relu_43)
        self.module_44 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[2]/Conv2d[conv2]/ret.115(ResNet::nndct_conv2d_44)
        self.module_45 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[2]/ReLU[relu2]/ret.119(ResNet::nndct_relu_45)
        self.module_46 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[2]/Conv2d[conv3]/ret.121(ResNet::nndct_conv2d_46)
        self.module_47 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer2]/block[2]/26686(ResNet::nndct_elemwise_add_47)
        self.module_48 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[2]/ReLU[relu3]/ret.125(ResNet::nndct_relu_48)
        self.module_49 = py_nndct.nn.Conv2d(in_channels=512, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[3]/Conv2d[conv1]/ret.127(ResNet::nndct_conv2d_49)
        self.module_50 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[3]/ReLU[relu1]/ret.131(ResNet::nndct_relu_50)
        self.module_51 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[3]/Conv2d[conv2]/ret.133(ResNet::nndct_conv2d_51)
        self.module_52 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[3]/ReLU[relu2]/ret.137(ResNet::nndct_relu_52)
        self.module_53 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[3]/Conv2d[conv3]/ret.139(ResNet::nndct_conv2d_53)
        self.module_54 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer2]/block[3]/26772(ResNet::nndct_elemwise_add_54)
        self.module_55 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[3]/ReLU[relu3]/ret.143(ResNet::nndct_relu_55)
        self.module_56 = py_nndct.nn.Conv2d(in_channels=512, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[4]/Conv2d[conv1]/ret.145(ResNet::nndct_conv2d_56)
        self.module_57 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[4]/ReLU[relu1]/ret.149(ResNet::nndct_relu_57)
        self.module_58 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[4]/Conv2d[conv2]/ret.151(ResNet::nndct_conv2d_58)
        self.module_59 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[4]/ReLU[relu2]/ret.155(ResNet::nndct_relu_59)
        self.module_60 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[4]/Conv2d[conv3]/ret.157(ResNet::nndct_conv2d_60)
        self.module_61 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer2]/block[4]/26858(ResNet::nndct_elemwise_add_61)
        self.module_62 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[4]/ReLU[relu3]/ret.161(ResNet::nndct_relu_62)
        self.module_63 = py_nndct.nn.Conv2d(in_channels=512, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[5]/Conv2d[conv1]/ret.163(ResNet::nndct_conv2d_63)
        self.module_64 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[5]/ReLU[relu1]/ret.167(ResNet::nndct_relu_64)
        self.module_65 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[5]/Conv2d[conv2]/ret.169(ResNet::nndct_conv2d_65)
        self.module_66 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[5]/ReLU[relu2]/ret.173(ResNet::nndct_relu_66)
        self.module_67 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[5]/Conv2d[conv3]/ret.175(ResNet::nndct_conv2d_67)
        self.module_68 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer2]/block[5]/26944(ResNet::nndct_elemwise_add_68)
        self.module_69 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[5]/ReLU[relu3]/ret.179(ResNet::nndct_relu_69)
        self.module_70 = py_nndct.nn.Conv2d(in_channels=512, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[6]/Conv2d[conv1]/ret.181(ResNet::nndct_conv2d_70)
        self.module_71 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[6]/ReLU[relu1]/ret.185(ResNet::nndct_relu_71)
        self.module_72 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[6]/Conv2d[conv2]/ret.187(ResNet::nndct_conv2d_72)
        self.module_73 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[6]/ReLU[relu2]/ret.191(ResNet::nndct_relu_73)
        self.module_74 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[6]/Conv2d[conv3]/ret.193(ResNet::nndct_conv2d_74)
        self.module_75 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer2]/block[6]/27030(ResNet::nndct_elemwise_add_75)
        self.module_76 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[6]/ReLU[relu3]/ret.197(ResNet::nndct_relu_76)
        self.module_77 = py_nndct.nn.Conv2d(in_channels=512, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[7]/Conv2d[conv1]/ret.199(ResNet::nndct_conv2d_77)
        self.module_78 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[7]/ReLU[relu1]/ret.203(ResNet::nndct_relu_78)
        self.module_79 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[7]/Conv2d[conv2]/ret.205(ResNet::nndct_conv2d_79)
        self.module_80 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[7]/ReLU[relu2]/ret.209(ResNet::nndct_relu_80)
        self.module_81 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[7]/Conv2d[conv3]/ret.211(ResNet::nndct_conv2d_81)
        self.module_82 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer2]/block[7]/27116(ResNet::nndct_elemwise_add_82)
        self.module_83 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[7]/ReLU[relu3]/ret.215(ResNet::nndct_relu_83)
        self.module_84 = py_nndct.nn.Conv2d(in_channels=512, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[0]/Conv2d[conv1]/ret.217(ResNet::nndct_conv2d_84)
        self.module_85 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[0]/ReLU[relu1]/ret.221(ResNet::nndct_relu_85)
        self.module_86 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[0]/Conv2d[conv2]/ret.223(ResNet::nndct_conv2d_86)
        self.module_87 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[0]/ReLU[relu2]/ret.227(ResNet::nndct_relu_87)
        self.module_88 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[0]/Conv2d[conv3]/ret.229(ResNet::nndct_conv2d_88)
        self.module_89 = py_nndct.nn.Conv2d(in_channels=512, out_channels=1024, kernel_size=[1, 1], stride=[2, 2], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[0]/Sequential[identity_downsample]/Conv2d[0]/ret.233(ResNet::nndct_conv2d_89)
        self.module_90 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[0]/27228(ResNet::nndct_elemwise_add_90)
        self.module_91 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[0]/ReLU[relu3]/ret.237(ResNet::nndct_relu_91)
        self.module_92 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[1]/Conv2d[conv1]/ret.239(ResNet::nndct_conv2d_92)
        self.module_93 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[1]/ReLU[relu1]/ret.243(ResNet::nndct_relu_93)
        self.module_94 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[1]/Conv2d[conv2]/ret.245(ResNet::nndct_conv2d_94)
        self.module_95 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[1]/ReLU[relu2]/ret.249(ResNet::nndct_relu_95)
        self.module_96 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[1]/Conv2d[conv3]/ret.251(ResNet::nndct_conv2d_96)
        self.module_97 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[1]/27314(ResNet::nndct_elemwise_add_97)
        self.module_98 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[1]/ReLU[relu3]/ret.255(ResNet::nndct_relu_98)
        self.module_99 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[2]/Conv2d[conv1]/ret.257(ResNet::nndct_conv2d_99)
        self.module_100 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[2]/ReLU[relu1]/ret.261(ResNet::nndct_relu_100)
        self.module_101 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[2]/Conv2d[conv2]/ret.263(ResNet::nndct_conv2d_101)
        self.module_102 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[2]/ReLU[relu2]/ret.267(ResNet::nndct_relu_102)
        self.module_103 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[2]/Conv2d[conv3]/ret.269(ResNet::nndct_conv2d_103)
        self.module_104 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[2]/27400(ResNet::nndct_elemwise_add_104)
        self.module_105 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[2]/ReLU[relu3]/ret.273(ResNet::nndct_relu_105)
        self.module_106 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[3]/Conv2d[conv1]/ret.275(ResNet::nndct_conv2d_106)
        self.module_107 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[3]/ReLU[relu1]/ret.279(ResNet::nndct_relu_107)
        self.module_108 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[3]/Conv2d[conv2]/ret.281(ResNet::nndct_conv2d_108)
        self.module_109 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[3]/ReLU[relu2]/ret.285(ResNet::nndct_relu_109)
        self.module_110 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[3]/Conv2d[conv3]/ret.287(ResNet::nndct_conv2d_110)
        self.module_111 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[3]/27486(ResNet::nndct_elemwise_add_111)
        self.module_112 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[3]/ReLU[relu3]/ret.291(ResNet::nndct_relu_112)
        self.module_113 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[4]/Conv2d[conv1]/ret.293(ResNet::nndct_conv2d_113)
        self.module_114 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[4]/ReLU[relu1]/ret.297(ResNet::nndct_relu_114)
        self.module_115 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[4]/Conv2d[conv2]/ret.299(ResNet::nndct_conv2d_115)
        self.module_116 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[4]/ReLU[relu2]/ret.303(ResNet::nndct_relu_116)
        self.module_117 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[4]/Conv2d[conv3]/ret.305(ResNet::nndct_conv2d_117)
        self.module_118 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[4]/27572(ResNet::nndct_elemwise_add_118)
        self.module_119 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[4]/ReLU[relu3]/ret.309(ResNet::nndct_relu_119)
        self.module_120 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[5]/Conv2d[conv1]/ret.311(ResNet::nndct_conv2d_120)
        self.module_121 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[5]/ReLU[relu1]/ret.315(ResNet::nndct_relu_121)
        self.module_122 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[5]/Conv2d[conv2]/ret.317(ResNet::nndct_conv2d_122)
        self.module_123 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[5]/ReLU[relu2]/ret.321(ResNet::nndct_relu_123)
        self.module_124 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[5]/Conv2d[conv3]/ret.323(ResNet::nndct_conv2d_124)
        self.module_125 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[5]/27658(ResNet::nndct_elemwise_add_125)
        self.module_126 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[5]/ReLU[relu3]/ret.327(ResNet::nndct_relu_126)
        self.module_127 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[6]/Conv2d[conv1]/ret.329(ResNet::nndct_conv2d_127)
        self.module_128 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[6]/ReLU[relu1]/ret.333(ResNet::nndct_relu_128)
        self.module_129 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[6]/Conv2d[conv2]/ret.335(ResNet::nndct_conv2d_129)
        self.module_130 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[6]/ReLU[relu2]/ret.339(ResNet::nndct_relu_130)
        self.module_131 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[6]/Conv2d[conv3]/ret.341(ResNet::nndct_conv2d_131)
        self.module_132 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[6]/27744(ResNet::nndct_elemwise_add_132)
        self.module_133 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[6]/ReLU[relu3]/ret.345(ResNet::nndct_relu_133)
        self.module_134 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[7]/Conv2d[conv1]/ret.347(ResNet::nndct_conv2d_134)
        self.module_135 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[7]/ReLU[relu1]/ret.351(ResNet::nndct_relu_135)
        self.module_136 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[7]/Conv2d[conv2]/ret.353(ResNet::nndct_conv2d_136)
        self.module_137 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[7]/ReLU[relu2]/ret.357(ResNet::nndct_relu_137)
        self.module_138 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[7]/Conv2d[conv3]/ret.359(ResNet::nndct_conv2d_138)
        self.module_139 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[7]/27830(ResNet::nndct_elemwise_add_139)
        self.module_140 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[7]/ReLU[relu3]/ret.363(ResNet::nndct_relu_140)
        self.module_141 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[8]/Conv2d[conv1]/ret.365(ResNet::nndct_conv2d_141)
        self.module_142 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[8]/ReLU[relu1]/ret.369(ResNet::nndct_relu_142)
        self.module_143 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[8]/Conv2d[conv2]/ret.371(ResNet::nndct_conv2d_143)
        self.module_144 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[8]/ReLU[relu2]/ret.375(ResNet::nndct_relu_144)
        self.module_145 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[8]/Conv2d[conv3]/ret.377(ResNet::nndct_conv2d_145)
        self.module_146 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[8]/27916(ResNet::nndct_elemwise_add_146)
        self.module_147 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[8]/ReLU[relu3]/ret.381(ResNet::nndct_relu_147)
        self.module_148 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[9]/Conv2d[conv1]/ret.383(ResNet::nndct_conv2d_148)
        self.module_149 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[9]/ReLU[relu1]/ret.387(ResNet::nndct_relu_149)
        self.module_150 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[9]/Conv2d[conv2]/ret.389(ResNet::nndct_conv2d_150)
        self.module_151 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[9]/ReLU[relu2]/ret.393(ResNet::nndct_relu_151)
        self.module_152 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[9]/Conv2d[conv3]/ret.395(ResNet::nndct_conv2d_152)
        self.module_153 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[9]/28002(ResNet::nndct_elemwise_add_153)
        self.module_154 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[9]/ReLU[relu3]/ret.399(ResNet::nndct_relu_154)
        self.module_155 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[10]/Conv2d[conv1]/ret.401(ResNet::nndct_conv2d_155)
        self.module_156 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[10]/ReLU[relu1]/ret.405(ResNet::nndct_relu_156)
        self.module_157 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[10]/Conv2d[conv2]/ret.407(ResNet::nndct_conv2d_157)
        self.module_158 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[10]/ReLU[relu2]/ret.411(ResNet::nndct_relu_158)
        self.module_159 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[10]/Conv2d[conv3]/ret.413(ResNet::nndct_conv2d_159)
        self.module_160 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[10]/28088(ResNet::nndct_elemwise_add_160)
        self.module_161 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[10]/ReLU[relu3]/ret.417(ResNet::nndct_relu_161)
        self.module_162 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[11]/Conv2d[conv1]/ret.419(ResNet::nndct_conv2d_162)
        self.module_163 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[11]/ReLU[relu1]/ret.423(ResNet::nndct_relu_163)
        self.module_164 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[11]/Conv2d[conv2]/ret.425(ResNet::nndct_conv2d_164)
        self.module_165 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[11]/ReLU[relu2]/ret.429(ResNet::nndct_relu_165)
        self.module_166 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[11]/Conv2d[conv3]/ret.431(ResNet::nndct_conv2d_166)
        self.module_167 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[11]/28174(ResNet::nndct_elemwise_add_167)
        self.module_168 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[11]/ReLU[relu3]/ret.435(ResNet::nndct_relu_168)
        self.module_169 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[12]/Conv2d[conv1]/ret.437(ResNet::nndct_conv2d_169)
        self.module_170 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[12]/ReLU[relu1]/ret.441(ResNet::nndct_relu_170)
        self.module_171 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[12]/Conv2d[conv2]/ret.443(ResNet::nndct_conv2d_171)
        self.module_172 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[12]/ReLU[relu2]/ret.447(ResNet::nndct_relu_172)
        self.module_173 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[12]/Conv2d[conv3]/ret.449(ResNet::nndct_conv2d_173)
        self.module_174 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[12]/28260(ResNet::nndct_elemwise_add_174)
        self.module_175 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[12]/ReLU[relu3]/ret.453(ResNet::nndct_relu_175)
        self.module_176 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[13]/Conv2d[conv1]/ret.455(ResNet::nndct_conv2d_176)
        self.module_177 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[13]/ReLU[relu1]/ret.459(ResNet::nndct_relu_177)
        self.module_178 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[13]/Conv2d[conv2]/ret.461(ResNet::nndct_conv2d_178)
        self.module_179 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[13]/ReLU[relu2]/ret.465(ResNet::nndct_relu_179)
        self.module_180 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[13]/Conv2d[conv3]/ret.467(ResNet::nndct_conv2d_180)
        self.module_181 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[13]/28346(ResNet::nndct_elemwise_add_181)
        self.module_182 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[13]/ReLU[relu3]/ret.471(ResNet::nndct_relu_182)
        self.module_183 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[14]/Conv2d[conv1]/ret.473(ResNet::nndct_conv2d_183)
        self.module_184 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[14]/ReLU[relu1]/ret.477(ResNet::nndct_relu_184)
        self.module_185 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[14]/Conv2d[conv2]/ret.479(ResNet::nndct_conv2d_185)
        self.module_186 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[14]/ReLU[relu2]/ret.483(ResNet::nndct_relu_186)
        self.module_187 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[14]/Conv2d[conv3]/ret.485(ResNet::nndct_conv2d_187)
        self.module_188 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[14]/28432(ResNet::nndct_elemwise_add_188)
        self.module_189 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[14]/ReLU[relu3]/ret.489(ResNet::nndct_relu_189)
        self.module_190 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[15]/Conv2d[conv1]/ret.491(ResNet::nndct_conv2d_190)
        self.module_191 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[15]/ReLU[relu1]/ret.495(ResNet::nndct_relu_191)
        self.module_192 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[15]/Conv2d[conv2]/ret.497(ResNet::nndct_conv2d_192)
        self.module_193 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[15]/ReLU[relu2]/ret.501(ResNet::nndct_relu_193)
        self.module_194 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[15]/Conv2d[conv3]/ret.503(ResNet::nndct_conv2d_194)
        self.module_195 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[15]/28518(ResNet::nndct_elemwise_add_195)
        self.module_196 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[15]/ReLU[relu3]/ret.507(ResNet::nndct_relu_196)
        self.module_197 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[16]/Conv2d[conv1]/ret.509(ResNet::nndct_conv2d_197)
        self.module_198 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[16]/ReLU[relu1]/ret.513(ResNet::nndct_relu_198)
        self.module_199 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[16]/Conv2d[conv2]/ret.515(ResNet::nndct_conv2d_199)
        self.module_200 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[16]/ReLU[relu2]/ret.519(ResNet::nndct_relu_200)
        self.module_201 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[16]/Conv2d[conv3]/ret.521(ResNet::nndct_conv2d_201)
        self.module_202 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[16]/28604(ResNet::nndct_elemwise_add_202)
        self.module_203 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[16]/ReLU[relu3]/ret.525(ResNet::nndct_relu_203)
        self.module_204 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[17]/Conv2d[conv1]/ret.527(ResNet::nndct_conv2d_204)
        self.module_205 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[17]/ReLU[relu1]/ret.531(ResNet::nndct_relu_205)
        self.module_206 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[17]/Conv2d[conv2]/ret.533(ResNet::nndct_conv2d_206)
        self.module_207 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[17]/ReLU[relu2]/ret.537(ResNet::nndct_relu_207)
        self.module_208 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[17]/Conv2d[conv3]/ret.539(ResNet::nndct_conv2d_208)
        self.module_209 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[17]/28690(ResNet::nndct_elemwise_add_209)
        self.module_210 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[17]/ReLU[relu3]/ret.543(ResNet::nndct_relu_210)
        self.module_211 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[18]/Conv2d[conv1]/ret.545(ResNet::nndct_conv2d_211)
        self.module_212 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[18]/ReLU[relu1]/ret.549(ResNet::nndct_relu_212)
        self.module_213 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[18]/Conv2d[conv2]/ret.551(ResNet::nndct_conv2d_213)
        self.module_214 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[18]/ReLU[relu2]/ret.555(ResNet::nndct_relu_214)
        self.module_215 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[18]/Conv2d[conv3]/ret.557(ResNet::nndct_conv2d_215)
        self.module_216 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[18]/28776(ResNet::nndct_elemwise_add_216)
        self.module_217 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[18]/ReLU[relu3]/ret.561(ResNet::nndct_relu_217)
        self.module_218 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[19]/Conv2d[conv1]/ret.563(ResNet::nndct_conv2d_218)
        self.module_219 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[19]/ReLU[relu1]/ret.567(ResNet::nndct_relu_219)
        self.module_220 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[19]/Conv2d[conv2]/ret.569(ResNet::nndct_conv2d_220)
        self.module_221 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[19]/ReLU[relu2]/ret.573(ResNet::nndct_relu_221)
        self.module_222 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[19]/Conv2d[conv3]/ret.575(ResNet::nndct_conv2d_222)
        self.module_223 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[19]/28862(ResNet::nndct_elemwise_add_223)
        self.module_224 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[19]/ReLU[relu3]/ret.579(ResNet::nndct_relu_224)
        self.module_225 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[20]/Conv2d[conv1]/ret.581(ResNet::nndct_conv2d_225)
        self.module_226 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[20]/ReLU[relu1]/ret.585(ResNet::nndct_relu_226)
        self.module_227 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[20]/Conv2d[conv2]/ret.587(ResNet::nndct_conv2d_227)
        self.module_228 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[20]/ReLU[relu2]/ret.591(ResNet::nndct_relu_228)
        self.module_229 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[20]/Conv2d[conv3]/ret.593(ResNet::nndct_conv2d_229)
        self.module_230 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[20]/28948(ResNet::nndct_elemwise_add_230)
        self.module_231 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[20]/ReLU[relu3]/ret.597(ResNet::nndct_relu_231)
        self.module_232 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[21]/Conv2d[conv1]/ret.599(ResNet::nndct_conv2d_232)
        self.module_233 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[21]/ReLU[relu1]/ret.603(ResNet::nndct_relu_233)
        self.module_234 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[21]/Conv2d[conv2]/ret.605(ResNet::nndct_conv2d_234)
        self.module_235 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[21]/ReLU[relu2]/ret.609(ResNet::nndct_relu_235)
        self.module_236 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[21]/Conv2d[conv3]/ret.611(ResNet::nndct_conv2d_236)
        self.module_237 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[21]/29034(ResNet::nndct_elemwise_add_237)
        self.module_238 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[21]/ReLU[relu3]/ret.615(ResNet::nndct_relu_238)
        self.module_239 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[22]/Conv2d[conv1]/ret.617(ResNet::nndct_conv2d_239)
        self.module_240 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[22]/ReLU[relu1]/ret.621(ResNet::nndct_relu_240)
        self.module_241 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[22]/Conv2d[conv2]/ret.623(ResNet::nndct_conv2d_241)
        self.module_242 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[22]/ReLU[relu2]/ret.627(ResNet::nndct_relu_242)
        self.module_243 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[22]/Conv2d[conv3]/ret.629(ResNet::nndct_conv2d_243)
        self.module_244 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[22]/29120(ResNet::nndct_elemwise_add_244)
        self.module_245 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[22]/ReLU[relu3]/ret.633(ResNet::nndct_relu_245)
        self.module_246 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[23]/Conv2d[conv1]/ret.635(ResNet::nndct_conv2d_246)
        self.module_247 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[23]/ReLU[relu1]/ret.639(ResNet::nndct_relu_247)
        self.module_248 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[23]/Conv2d[conv2]/ret.641(ResNet::nndct_conv2d_248)
        self.module_249 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[23]/ReLU[relu2]/ret.645(ResNet::nndct_relu_249)
        self.module_250 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[23]/Conv2d[conv3]/ret.647(ResNet::nndct_conv2d_250)
        self.module_251 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[23]/29206(ResNet::nndct_elemwise_add_251)
        self.module_252 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[23]/ReLU[relu3]/ret.651(ResNet::nndct_relu_252)
        self.module_253 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[24]/Conv2d[conv1]/ret.653(ResNet::nndct_conv2d_253)
        self.module_254 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[24]/ReLU[relu1]/ret.657(ResNet::nndct_relu_254)
        self.module_255 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[24]/Conv2d[conv2]/ret.659(ResNet::nndct_conv2d_255)
        self.module_256 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[24]/ReLU[relu2]/ret.663(ResNet::nndct_relu_256)
        self.module_257 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[24]/Conv2d[conv3]/ret.665(ResNet::nndct_conv2d_257)
        self.module_258 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[24]/29292(ResNet::nndct_elemwise_add_258)
        self.module_259 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[24]/ReLU[relu3]/ret.669(ResNet::nndct_relu_259)
        self.module_260 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[25]/Conv2d[conv1]/ret.671(ResNet::nndct_conv2d_260)
        self.module_261 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[25]/ReLU[relu1]/ret.675(ResNet::nndct_relu_261)
        self.module_262 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[25]/Conv2d[conv2]/ret.677(ResNet::nndct_conv2d_262)
        self.module_263 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[25]/ReLU[relu2]/ret.681(ResNet::nndct_relu_263)
        self.module_264 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[25]/Conv2d[conv3]/ret.683(ResNet::nndct_conv2d_264)
        self.module_265 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[25]/29378(ResNet::nndct_elemwise_add_265)
        self.module_266 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[25]/ReLU[relu3]/ret.687(ResNet::nndct_relu_266)
        self.module_267 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[26]/Conv2d[conv1]/ret.689(ResNet::nndct_conv2d_267)
        self.module_268 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[26]/ReLU[relu1]/ret.693(ResNet::nndct_relu_268)
        self.module_269 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[26]/Conv2d[conv2]/ret.695(ResNet::nndct_conv2d_269)
        self.module_270 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[26]/ReLU[relu2]/ret.699(ResNet::nndct_relu_270)
        self.module_271 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[26]/Conv2d[conv3]/ret.701(ResNet::nndct_conv2d_271)
        self.module_272 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[26]/29464(ResNet::nndct_elemwise_add_272)
        self.module_273 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[26]/ReLU[relu3]/ret.705(ResNet::nndct_relu_273)
        self.module_274 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[27]/Conv2d[conv1]/ret.707(ResNet::nndct_conv2d_274)
        self.module_275 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[27]/ReLU[relu1]/ret.711(ResNet::nndct_relu_275)
        self.module_276 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[27]/Conv2d[conv2]/ret.713(ResNet::nndct_conv2d_276)
        self.module_277 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[27]/ReLU[relu2]/ret.717(ResNet::nndct_relu_277)
        self.module_278 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[27]/Conv2d[conv3]/ret.719(ResNet::nndct_conv2d_278)
        self.module_279 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[27]/29550(ResNet::nndct_elemwise_add_279)
        self.module_280 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[27]/ReLU[relu3]/ret.723(ResNet::nndct_relu_280)
        self.module_281 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[28]/Conv2d[conv1]/ret.725(ResNet::nndct_conv2d_281)
        self.module_282 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[28]/ReLU[relu1]/ret.729(ResNet::nndct_relu_282)
        self.module_283 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[28]/Conv2d[conv2]/ret.731(ResNet::nndct_conv2d_283)
        self.module_284 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[28]/ReLU[relu2]/ret.735(ResNet::nndct_relu_284)
        self.module_285 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[28]/Conv2d[conv3]/ret.737(ResNet::nndct_conv2d_285)
        self.module_286 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[28]/29636(ResNet::nndct_elemwise_add_286)
        self.module_287 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[28]/ReLU[relu3]/ret.741(ResNet::nndct_relu_287)
        self.module_288 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[29]/Conv2d[conv1]/ret.743(ResNet::nndct_conv2d_288)
        self.module_289 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[29]/ReLU[relu1]/ret.747(ResNet::nndct_relu_289)
        self.module_290 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[29]/Conv2d[conv2]/ret.749(ResNet::nndct_conv2d_290)
        self.module_291 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[29]/ReLU[relu2]/ret.753(ResNet::nndct_relu_291)
        self.module_292 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[29]/Conv2d[conv3]/ret.755(ResNet::nndct_conv2d_292)
        self.module_293 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[29]/29722(ResNet::nndct_elemwise_add_293)
        self.module_294 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[29]/ReLU[relu3]/ret.759(ResNet::nndct_relu_294)
        self.module_295 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[30]/Conv2d[conv1]/ret.761(ResNet::nndct_conv2d_295)
        self.module_296 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[30]/ReLU[relu1]/ret.765(ResNet::nndct_relu_296)
        self.module_297 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[30]/Conv2d[conv2]/ret.767(ResNet::nndct_conv2d_297)
        self.module_298 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[30]/ReLU[relu2]/ret.771(ResNet::nndct_relu_298)
        self.module_299 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[30]/Conv2d[conv3]/ret.773(ResNet::nndct_conv2d_299)
        self.module_300 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[30]/29808(ResNet::nndct_elemwise_add_300)
        self.module_301 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[30]/ReLU[relu3]/ret.777(ResNet::nndct_relu_301)
        self.module_302 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[31]/Conv2d[conv1]/ret.779(ResNet::nndct_conv2d_302)
        self.module_303 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[31]/ReLU[relu1]/ret.783(ResNet::nndct_relu_303)
        self.module_304 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[31]/Conv2d[conv2]/ret.785(ResNet::nndct_conv2d_304)
        self.module_305 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[31]/ReLU[relu2]/ret.789(ResNet::nndct_relu_305)
        self.module_306 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[31]/Conv2d[conv3]/ret.791(ResNet::nndct_conv2d_306)
        self.module_307 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[31]/29894(ResNet::nndct_elemwise_add_307)
        self.module_308 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[31]/ReLU[relu3]/ret.795(ResNet::nndct_relu_308)
        self.module_309 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[32]/Conv2d[conv1]/ret.797(ResNet::nndct_conv2d_309)
        self.module_310 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[32]/ReLU[relu1]/ret.801(ResNet::nndct_relu_310)
        self.module_311 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[32]/Conv2d[conv2]/ret.803(ResNet::nndct_conv2d_311)
        self.module_312 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[32]/ReLU[relu2]/ret.807(ResNet::nndct_relu_312)
        self.module_313 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[32]/Conv2d[conv3]/ret.809(ResNet::nndct_conv2d_313)
        self.module_314 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[32]/29980(ResNet::nndct_elemwise_add_314)
        self.module_315 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[32]/ReLU[relu3]/ret.813(ResNet::nndct_relu_315)
        self.module_316 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[33]/Conv2d[conv1]/ret.815(ResNet::nndct_conv2d_316)
        self.module_317 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[33]/ReLU[relu1]/ret.819(ResNet::nndct_relu_317)
        self.module_318 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[33]/Conv2d[conv2]/ret.821(ResNet::nndct_conv2d_318)
        self.module_319 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[33]/ReLU[relu2]/ret.825(ResNet::nndct_relu_319)
        self.module_320 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[33]/Conv2d[conv3]/ret.827(ResNet::nndct_conv2d_320)
        self.module_321 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[33]/30066(ResNet::nndct_elemwise_add_321)
        self.module_322 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[33]/ReLU[relu3]/ret.831(ResNet::nndct_relu_322)
        self.module_323 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[34]/Conv2d[conv1]/ret.833(ResNet::nndct_conv2d_323)
        self.module_324 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[34]/ReLU[relu1]/ret.837(ResNet::nndct_relu_324)
        self.module_325 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[34]/Conv2d[conv2]/ret.839(ResNet::nndct_conv2d_325)
        self.module_326 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[34]/ReLU[relu2]/ret.843(ResNet::nndct_relu_326)
        self.module_327 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[34]/Conv2d[conv3]/ret.845(ResNet::nndct_conv2d_327)
        self.module_328 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[34]/30152(ResNet::nndct_elemwise_add_328)
        self.module_329 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[34]/ReLU[relu3]/ret.849(ResNet::nndct_relu_329)
        self.module_330 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[35]/Conv2d[conv1]/ret.851(ResNet::nndct_conv2d_330)
        self.module_331 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[35]/ReLU[relu1]/ret.855(ResNet::nndct_relu_331)
        self.module_332 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[35]/Conv2d[conv2]/ret.857(ResNet::nndct_conv2d_332)
        self.module_333 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[35]/ReLU[relu2]/ret.861(ResNet::nndct_relu_333)
        self.module_334 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[35]/Conv2d[conv3]/ret.863(ResNet::nndct_conv2d_334)
        self.module_335 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[35]/30238(ResNet::nndct_elemwise_add_335)
        self.module_336 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[35]/ReLU[relu3]/ret.867(ResNet::nndct_relu_336)
        self.module_337 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[0]/Conv2d[conv1]/ret.869(ResNet::nndct_conv2d_337)
        self.module_338 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[0]/ReLU[relu1]/ret.873(ResNet::nndct_relu_338)
        self.module_339 = py_nndct.nn.Conv2d(in_channels=512, out_channels=512, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[0]/Conv2d[conv2]/ret.875(ResNet::nndct_conv2d_339)
        self.module_340 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[0]/ReLU[relu2]/ret.879(ResNet::nndct_relu_340)
        self.module_341 = py_nndct.nn.Conv2d(in_channels=512, out_channels=2048, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[0]/Conv2d[conv3]/ret.881(ResNet::nndct_conv2d_341)
        self.module_342 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=2048, kernel_size=[1, 1], stride=[2, 2], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[0]/Sequential[identity_downsample]/Conv2d[0]/ret.885(ResNet::nndct_conv2d_342)
        self.module_343 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer4]/block[0]/30350(ResNet::nndct_elemwise_add_343)
        self.module_344 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[0]/ReLU[relu3]/ret.889(ResNet::nndct_relu_344)
        self.module_345 = py_nndct.nn.Conv2d(in_channels=2048, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[1]/Conv2d[conv1]/ret.891(ResNet::nndct_conv2d_345)
        self.module_346 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[1]/ReLU[relu1]/ret.895(ResNet::nndct_relu_346)
        self.module_347 = py_nndct.nn.Conv2d(in_channels=512, out_channels=512, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[1]/Conv2d[conv2]/ret.897(ResNet::nndct_conv2d_347)
        self.module_348 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[1]/ReLU[relu2]/ret.901(ResNet::nndct_relu_348)
        self.module_349 = py_nndct.nn.Conv2d(in_channels=512, out_channels=2048, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[1]/Conv2d[conv3]/ret.903(ResNet::nndct_conv2d_349)
        self.module_350 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer4]/block[1]/30436(ResNet::nndct_elemwise_add_350)
        self.module_351 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[1]/ReLU[relu3]/ret.907(ResNet::nndct_relu_351)
        self.module_352 = py_nndct.nn.Conv2d(in_channels=2048, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[2]/Conv2d[conv1]/ret.909(ResNet::nndct_conv2d_352)
        self.module_353 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[2]/ReLU[relu1]/ret.913(ResNet::nndct_relu_353)
        self.module_354 = py_nndct.nn.Conv2d(in_channels=512, out_channels=512, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[2]/Conv2d[conv2]/ret.915(ResNet::nndct_conv2d_354)
        self.module_355 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[2]/ReLU[relu2]/ret.919(ResNet::nndct_relu_355)
        self.module_356 = py_nndct.nn.Conv2d(in_channels=512, out_channels=2048, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[2]/Conv2d[conv3]/ret.921(ResNet::nndct_conv2d_356)
        self.module_357 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer4]/block[2]/30522(ResNet::nndct_elemwise_add_357)
        self.module_358 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[2]/ReLU[relu3]/ret.925(ResNet::nndct_relu_358)
        self.module_359 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #ResNet::ResNet/AdaptiveAvgPool2d[avgpool]/30541(ResNet::nndct_adaptive_avg_pool2d_359)
        self.module_360 = py_nndct.nn.Module('nndct_shape') #ResNet::ResNet/30544(ResNet::nndct_shape_360)
        self.module_361 = py_nndct.nn.Module('nndct_reshape') #ResNet::ResNet/ret.927(ResNet::nndct_reshape_361)
        self.module_362 = py_nndct.nn.Linear(in_features=2048, out_features=3, bias=True) #ResNet::ResNet/Linear[fc]/ret.929(ResNet::nndct_dense_362)
        self.module_363 = py_nndct.nn.dequant_output() #ResNet::ResNet/DeQuantStub[dequant_stub]/30566(ResNet::nndct_dequant_stub_363)

    @py_nndct.nn.forward_processor
    def forward(self, *args):
        output_module_0 = self.module_0(input=args[0])
        output_module_0 = self.module_1(input=output_module_0)
        output_module_0 = self.module_2(output_module_0)
        output_module_0 = self.module_3(output_module_0)
        output_module_0 = self.module_4(output_module_0)
        output_module_5 = self.module_5(output_module_0)
        output_module_5 = self.module_6(output_module_5)
        output_module_5 = self.module_7(output_module_5)
        output_module_5 = self.module_8(output_module_5)
        output_module_5 = self.module_9(output_module_5)
        output_module_10 = self.module_10(output_module_0)
        output_module_5 = self.module_11(input=output_module_5, other=output_module_10, alpha=1)
        output_module_5 = self.module_12(output_module_5)
        output_module_13 = self.module_13(output_module_5)
        output_module_13 = self.module_14(output_module_13)
        output_module_13 = self.module_15(output_module_13)
        output_module_13 = self.module_16(output_module_13)
        output_module_13 = self.module_17(output_module_13)
        output_module_13 = self.module_18(input=output_module_13, other=output_module_5, alpha=1)
        output_module_13 = self.module_19(output_module_13)
        output_module_20 = self.module_20(output_module_13)
        output_module_20 = self.module_21(output_module_20)
        output_module_20 = self.module_22(output_module_20)
        output_module_20 = self.module_23(output_module_20)
        output_module_20 = self.module_24(output_module_20)
        output_module_20 = self.module_25(input=output_module_20, other=output_module_13, alpha=1)
        output_module_20 = self.module_26(output_module_20)
        output_module_27 = self.module_27(output_module_20)
        output_module_27 = self.module_28(output_module_27)
        output_module_27 = self.module_29(output_module_27)
        output_module_27 = self.module_30(output_module_27)
        output_module_27 = self.module_31(output_module_27)
        output_module_32 = self.module_32(output_module_20)
        output_module_27 = self.module_33(input=output_module_27, other=output_module_32, alpha=1)
        output_module_27 = self.module_34(output_module_27)
        output_module_35 = self.module_35(output_module_27)
        output_module_35 = self.module_36(output_module_35)
        output_module_35 = self.module_37(output_module_35)
        output_module_35 = self.module_38(output_module_35)
        output_module_35 = self.module_39(output_module_35)
        output_module_35 = self.module_40(input=output_module_35, other=output_module_27, alpha=1)
        output_module_35 = self.module_41(output_module_35)
        output_module_42 = self.module_42(output_module_35)
        output_module_42 = self.module_43(output_module_42)
        output_module_42 = self.module_44(output_module_42)
        output_module_42 = self.module_45(output_module_42)
        output_module_42 = self.module_46(output_module_42)
        output_module_42 = self.module_47(input=output_module_42, other=output_module_35, alpha=1)
        output_module_42 = self.module_48(output_module_42)
        output_module_49 = self.module_49(output_module_42)
        output_module_49 = self.module_50(output_module_49)
        output_module_49 = self.module_51(output_module_49)
        output_module_49 = self.module_52(output_module_49)
        output_module_49 = self.module_53(output_module_49)
        output_module_49 = self.module_54(input=output_module_49, other=output_module_42, alpha=1)
        output_module_49 = self.module_55(output_module_49)
        output_module_56 = self.module_56(output_module_49)
        output_module_56 = self.module_57(output_module_56)
        output_module_56 = self.module_58(output_module_56)
        output_module_56 = self.module_59(output_module_56)
        output_module_56 = self.module_60(output_module_56)
        output_module_56 = self.module_61(input=output_module_56, other=output_module_49, alpha=1)
        output_module_56 = self.module_62(output_module_56)
        output_module_63 = self.module_63(output_module_56)
        output_module_63 = self.module_64(output_module_63)
        output_module_63 = self.module_65(output_module_63)
        output_module_63 = self.module_66(output_module_63)
        output_module_63 = self.module_67(output_module_63)
        output_module_63 = self.module_68(input=output_module_63, other=output_module_56, alpha=1)
        output_module_63 = self.module_69(output_module_63)
        output_module_70 = self.module_70(output_module_63)
        output_module_70 = self.module_71(output_module_70)
        output_module_70 = self.module_72(output_module_70)
        output_module_70 = self.module_73(output_module_70)
        output_module_70 = self.module_74(output_module_70)
        output_module_70 = self.module_75(input=output_module_70, other=output_module_63, alpha=1)
        output_module_70 = self.module_76(output_module_70)
        output_module_77 = self.module_77(output_module_70)
        output_module_77 = self.module_78(output_module_77)
        output_module_77 = self.module_79(output_module_77)
        output_module_77 = self.module_80(output_module_77)
        output_module_77 = self.module_81(output_module_77)
        output_module_77 = self.module_82(input=output_module_77, other=output_module_70, alpha=1)
        output_module_77 = self.module_83(output_module_77)
        output_module_84 = self.module_84(output_module_77)
        output_module_84 = self.module_85(output_module_84)
        output_module_84 = self.module_86(output_module_84)
        output_module_84 = self.module_87(output_module_84)
        output_module_84 = self.module_88(output_module_84)
        output_module_89 = self.module_89(output_module_77)
        output_module_84 = self.module_90(input=output_module_84, other=output_module_89, alpha=1)
        output_module_84 = self.module_91(output_module_84)
        output_module_92 = self.module_92(output_module_84)
        output_module_92 = self.module_93(output_module_92)
        output_module_92 = self.module_94(output_module_92)
        output_module_92 = self.module_95(output_module_92)
        output_module_92 = self.module_96(output_module_92)
        output_module_92 = self.module_97(input=output_module_92, other=output_module_84, alpha=1)
        output_module_92 = self.module_98(output_module_92)
        output_module_99 = self.module_99(output_module_92)
        output_module_99 = self.module_100(output_module_99)
        output_module_99 = self.module_101(output_module_99)
        output_module_99 = self.module_102(output_module_99)
        output_module_99 = self.module_103(output_module_99)
        output_module_99 = self.module_104(input=output_module_99, other=output_module_92, alpha=1)
        output_module_99 = self.module_105(output_module_99)
        output_module_106 = self.module_106(output_module_99)
        output_module_106 = self.module_107(output_module_106)
        output_module_106 = self.module_108(output_module_106)
        output_module_106 = self.module_109(output_module_106)
        output_module_106 = self.module_110(output_module_106)
        output_module_106 = self.module_111(input=output_module_106, other=output_module_99, alpha=1)
        output_module_106 = self.module_112(output_module_106)
        output_module_113 = self.module_113(output_module_106)
        output_module_113 = self.module_114(output_module_113)
        output_module_113 = self.module_115(output_module_113)
        output_module_113 = self.module_116(output_module_113)
        output_module_113 = self.module_117(output_module_113)
        output_module_113 = self.module_118(input=output_module_113, other=output_module_106, alpha=1)
        output_module_113 = self.module_119(output_module_113)
        output_module_120 = self.module_120(output_module_113)
        output_module_120 = self.module_121(output_module_120)
        output_module_120 = self.module_122(output_module_120)
        output_module_120 = self.module_123(output_module_120)
        output_module_120 = self.module_124(output_module_120)
        output_module_120 = self.module_125(input=output_module_120, other=output_module_113, alpha=1)
        output_module_120 = self.module_126(output_module_120)
        output_module_127 = self.module_127(output_module_120)
        output_module_127 = self.module_128(output_module_127)
        output_module_127 = self.module_129(output_module_127)
        output_module_127 = self.module_130(output_module_127)
        output_module_127 = self.module_131(output_module_127)
        output_module_127 = self.module_132(input=output_module_127, other=output_module_120, alpha=1)
        output_module_127 = self.module_133(output_module_127)
        output_module_134 = self.module_134(output_module_127)
        output_module_134 = self.module_135(output_module_134)
        output_module_134 = self.module_136(output_module_134)
        output_module_134 = self.module_137(output_module_134)
        output_module_134 = self.module_138(output_module_134)
        output_module_134 = self.module_139(input=output_module_134, other=output_module_127, alpha=1)
        output_module_134 = self.module_140(output_module_134)
        output_module_141 = self.module_141(output_module_134)
        output_module_141 = self.module_142(output_module_141)
        output_module_141 = self.module_143(output_module_141)
        output_module_141 = self.module_144(output_module_141)
        output_module_141 = self.module_145(output_module_141)
        output_module_141 = self.module_146(input=output_module_141, other=output_module_134, alpha=1)
        output_module_141 = self.module_147(output_module_141)
        output_module_148 = self.module_148(output_module_141)
        output_module_148 = self.module_149(output_module_148)
        output_module_148 = self.module_150(output_module_148)
        output_module_148 = self.module_151(output_module_148)
        output_module_148 = self.module_152(output_module_148)
        output_module_148 = self.module_153(input=output_module_148, other=output_module_141, alpha=1)
        output_module_148 = self.module_154(output_module_148)
        output_module_155 = self.module_155(output_module_148)
        output_module_155 = self.module_156(output_module_155)
        output_module_155 = self.module_157(output_module_155)
        output_module_155 = self.module_158(output_module_155)
        output_module_155 = self.module_159(output_module_155)
        output_module_155 = self.module_160(input=output_module_155, other=output_module_148, alpha=1)
        output_module_155 = self.module_161(output_module_155)
        output_module_162 = self.module_162(output_module_155)
        output_module_162 = self.module_163(output_module_162)
        output_module_162 = self.module_164(output_module_162)
        output_module_162 = self.module_165(output_module_162)
        output_module_162 = self.module_166(output_module_162)
        output_module_162 = self.module_167(input=output_module_162, other=output_module_155, alpha=1)
        output_module_162 = self.module_168(output_module_162)
        output_module_169 = self.module_169(output_module_162)
        output_module_169 = self.module_170(output_module_169)
        output_module_169 = self.module_171(output_module_169)
        output_module_169 = self.module_172(output_module_169)
        output_module_169 = self.module_173(output_module_169)
        output_module_169 = self.module_174(input=output_module_169, other=output_module_162, alpha=1)
        output_module_169 = self.module_175(output_module_169)
        output_module_176 = self.module_176(output_module_169)
        output_module_176 = self.module_177(output_module_176)
        output_module_176 = self.module_178(output_module_176)
        output_module_176 = self.module_179(output_module_176)
        output_module_176 = self.module_180(output_module_176)
        output_module_176 = self.module_181(input=output_module_176, other=output_module_169, alpha=1)
        output_module_176 = self.module_182(output_module_176)
        output_module_183 = self.module_183(output_module_176)
        output_module_183 = self.module_184(output_module_183)
        output_module_183 = self.module_185(output_module_183)
        output_module_183 = self.module_186(output_module_183)
        output_module_183 = self.module_187(output_module_183)
        output_module_183 = self.module_188(input=output_module_183, other=output_module_176, alpha=1)
        output_module_183 = self.module_189(output_module_183)
        output_module_190 = self.module_190(output_module_183)
        output_module_190 = self.module_191(output_module_190)
        output_module_190 = self.module_192(output_module_190)
        output_module_190 = self.module_193(output_module_190)
        output_module_190 = self.module_194(output_module_190)
        output_module_190 = self.module_195(input=output_module_190, other=output_module_183, alpha=1)
        output_module_190 = self.module_196(output_module_190)
        output_module_197 = self.module_197(output_module_190)
        output_module_197 = self.module_198(output_module_197)
        output_module_197 = self.module_199(output_module_197)
        output_module_197 = self.module_200(output_module_197)
        output_module_197 = self.module_201(output_module_197)
        output_module_197 = self.module_202(input=output_module_197, other=output_module_190, alpha=1)
        output_module_197 = self.module_203(output_module_197)
        output_module_204 = self.module_204(output_module_197)
        output_module_204 = self.module_205(output_module_204)
        output_module_204 = self.module_206(output_module_204)
        output_module_204 = self.module_207(output_module_204)
        output_module_204 = self.module_208(output_module_204)
        output_module_204 = self.module_209(input=output_module_204, other=output_module_197, alpha=1)
        output_module_204 = self.module_210(output_module_204)
        output_module_211 = self.module_211(output_module_204)
        output_module_211 = self.module_212(output_module_211)
        output_module_211 = self.module_213(output_module_211)
        output_module_211 = self.module_214(output_module_211)
        output_module_211 = self.module_215(output_module_211)
        output_module_211 = self.module_216(input=output_module_211, other=output_module_204, alpha=1)
        output_module_211 = self.module_217(output_module_211)
        output_module_218 = self.module_218(output_module_211)
        output_module_218 = self.module_219(output_module_218)
        output_module_218 = self.module_220(output_module_218)
        output_module_218 = self.module_221(output_module_218)
        output_module_218 = self.module_222(output_module_218)
        output_module_218 = self.module_223(input=output_module_218, other=output_module_211, alpha=1)
        output_module_218 = self.module_224(output_module_218)
        output_module_225 = self.module_225(output_module_218)
        output_module_225 = self.module_226(output_module_225)
        output_module_225 = self.module_227(output_module_225)
        output_module_225 = self.module_228(output_module_225)
        output_module_225 = self.module_229(output_module_225)
        output_module_225 = self.module_230(input=output_module_225, other=output_module_218, alpha=1)
        output_module_225 = self.module_231(output_module_225)
        output_module_232 = self.module_232(output_module_225)
        output_module_232 = self.module_233(output_module_232)
        output_module_232 = self.module_234(output_module_232)
        output_module_232 = self.module_235(output_module_232)
        output_module_232 = self.module_236(output_module_232)
        output_module_232 = self.module_237(input=output_module_232, other=output_module_225, alpha=1)
        output_module_232 = self.module_238(output_module_232)
        output_module_239 = self.module_239(output_module_232)
        output_module_239 = self.module_240(output_module_239)
        output_module_239 = self.module_241(output_module_239)
        output_module_239 = self.module_242(output_module_239)
        output_module_239 = self.module_243(output_module_239)
        output_module_239 = self.module_244(input=output_module_239, other=output_module_232, alpha=1)
        output_module_239 = self.module_245(output_module_239)
        output_module_246 = self.module_246(output_module_239)
        output_module_246 = self.module_247(output_module_246)
        output_module_246 = self.module_248(output_module_246)
        output_module_246 = self.module_249(output_module_246)
        output_module_246 = self.module_250(output_module_246)
        output_module_246 = self.module_251(input=output_module_246, other=output_module_239, alpha=1)
        output_module_246 = self.module_252(output_module_246)
        output_module_253 = self.module_253(output_module_246)
        output_module_253 = self.module_254(output_module_253)
        output_module_253 = self.module_255(output_module_253)
        output_module_253 = self.module_256(output_module_253)
        output_module_253 = self.module_257(output_module_253)
        output_module_253 = self.module_258(input=output_module_253, other=output_module_246, alpha=1)
        output_module_253 = self.module_259(output_module_253)
        output_module_260 = self.module_260(output_module_253)
        output_module_260 = self.module_261(output_module_260)
        output_module_260 = self.module_262(output_module_260)
        output_module_260 = self.module_263(output_module_260)
        output_module_260 = self.module_264(output_module_260)
        output_module_260 = self.module_265(input=output_module_260, other=output_module_253, alpha=1)
        output_module_260 = self.module_266(output_module_260)
        output_module_267 = self.module_267(output_module_260)
        output_module_267 = self.module_268(output_module_267)
        output_module_267 = self.module_269(output_module_267)
        output_module_267 = self.module_270(output_module_267)
        output_module_267 = self.module_271(output_module_267)
        output_module_267 = self.module_272(input=output_module_267, other=output_module_260, alpha=1)
        output_module_267 = self.module_273(output_module_267)
        output_module_274 = self.module_274(output_module_267)
        output_module_274 = self.module_275(output_module_274)
        output_module_274 = self.module_276(output_module_274)
        output_module_274 = self.module_277(output_module_274)
        output_module_274 = self.module_278(output_module_274)
        output_module_274 = self.module_279(input=output_module_274, other=output_module_267, alpha=1)
        output_module_274 = self.module_280(output_module_274)
        output_module_281 = self.module_281(output_module_274)
        output_module_281 = self.module_282(output_module_281)
        output_module_281 = self.module_283(output_module_281)
        output_module_281 = self.module_284(output_module_281)
        output_module_281 = self.module_285(output_module_281)
        output_module_281 = self.module_286(input=output_module_281, other=output_module_274, alpha=1)
        output_module_281 = self.module_287(output_module_281)
        output_module_288 = self.module_288(output_module_281)
        output_module_288 = self.module_289(output_module_288)
        output_module_288 = self.module_290(output_module_288)
        output_module_288 = self.module_291(output_module_288)
        output_module_288 = self.module_292(output_module_288)
        output_module_288 = self.module_293(input=output_module_288, other=output_module_281, alpha=1)
        output_module_288 = self.module_294(output_module_288)
        output_module_295 = self.module_295(output_module_288)
        output_module_295 = self.module_296(output_module_295)
        output_module_295 = self.module_297(output_module_295)
        output_module_295 = self.module_298(output_module_295)
        output_module_295 = self.module_299(output_module_295)
        output_module_295 = self.module_300(input=output_module_295, other=output_module_288, alpha=1)
        output_module_295 = self.module_301(output_module_295)
        output_module_302 = self.module_302(output_module_295)
        output_module_302 = self.module_303(output_module_302)
        output_module_302 = self.module_304(output_module_302)
        output_module_302 = self.module_305(output_module_302)
        output_module_302 = self.module_306(output_module_302)
        output_module_302 = self.module_307(input=output_module_302, other=output_module_295, alpha=1)
        output_module_302 = self.module_308(output_module_302)
        output_module_309 = self.module_309(output_module_302)
        output_module_309 = self.module_310(output_module_309)
        output_module_309 = self.module_311(output_module_309)
        output_module_309 = self.module_312(output_module_309)
        output_module_309 = self.module_313(output_module_309)
        output_module_309 = self.module_314(input=output_module_309, other=output_module_302, alpha=1)
        output_module_309 = self.module_315(output_module_309)
        output_module_316 = self.module_316(output_module_309)
        output_module_316 = self.module_317(output_module_316)
        output_module_316 = self.module_318(output_module_316)
        output_module_316 = self.module_319(output_module_316)
        output_module_316 = self.module_320(output_module_316)
        output_module_316 = self.module_321(input=output_module_316, other=output_module_309, alpha=1)
        output_module_316 = self.module_322(output_module_316)
        output_module_323 = self.module_323(output_module_316)
        output_module_323 = self.module_324(output_module_323)
        output_module_323 = self.module_325(output_module_323)
        output_module_323 = self.module_326(output_module_323)
        output_module_323 = self.module_327(output_module_323)
        output_module_323 = self.module_328(input=output_module_323, other=output_module_316, alpha=1)
        output_module_323 = self.module_329(output_module_323)
        output_module_330 = self.module_330(output_module_323)
        output_module_330 = self.module_331(output_module_330)
        output_module_330 = self.module_332(output_module_330)
        output_module_330 = self.module_333(output_module_330)
        output_module_330 = self.module_334(output_module_330)
        output_module_330 = self.module_335(input=output_module_330, other=output_module_323, alpha=1)
        output_module_330 = self.module_336(output_module_330)
        output_module_337 = self.module_337(output_module_330)
        output_module_337 = self.module_338(output_module_337)
        output_module_337 = self.module_339(output_module_337)
        output_module_337 = self.module_340(output_module_337)
        output_module_337 = self.module_341(output_module_337)
        output_module_342 = self.module_342(output_module_330)
        output_module_337 = self.module_343(input=output_module_337, other=output_module_342, alpha=1)
        output_module_337 = self.module_344(output_module_337)
        output_module_345 = self.module_345(output_module_337)
        output_module_345 = self.module_346(output_module_345)
        output_module_345 = self.module_347(output_module_345)
        output_module_345 = self.module_348(output_module_345)
        output_module_345 = self.module_349(output_module_345)
        output_module_345 = self.module_350(input=output_module_345, other=output_module_337, alpha=1)
        output_module_345 = self.module_351(output_module_345)
        output_module_352 = self.module_352(output_module_345)
        output_module_352 = self.module_353(output_module_352)
        output_module_352 = self.module_354(output_module_352)
        output_module_352 = self.module_355(output_module_352)
        output_module_352 = self.module_356(output_module_352)
        output_module_352 = self.module_357(input=output_module_352, other=output_module_345, alpha=1)
        output_module_352 = self.module_358(output_module_352)
        output_module_352 = self.module_359(output_module_352)
        output_module_360 = self.module_360(input=output_module_352, dim=0)
        output_module_361 = self.module_361(input=output_module_352, shape=[output_module_360,-1])
        output_module_361 = self.module_362(output_module_361)
        output_module_361 = self.module_363(input=output_module_361)
        return output_module_361
