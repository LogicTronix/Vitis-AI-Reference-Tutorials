(vitis-ai-pytorch) vitis-ai-user@docker-desktop:/workspace/src/vai_quantizer/vai_q_pytorch/example/resnet101$ python quantization.py --quant_mode calib --fast_finetune --batch_size 1 --subset_len 8
No CUDA runtime is found, using CUDA_HOME='/usr/local/cuda'

[VAIQ_NOTE]: Loading NNDCT kernels...
Train dataset size: 12000
Test dataset size: 3000
-------- Start resnet101 test 

[VAIQ_NOTE]: OS and CPU information:
               system --- Linux
                 node --- docker-desktop
              release --- 5.15.90.1-microsoft-standard-WSL2
              version --- #1 SMP Fri Jan 27 02:56:13 UTC 2023
              machine --- x86_64
            processor --- x86_64

[VAIQ_NOTE]: Tools version information:
                  GCC --- GCC 7.5.0
               python --- 3.8.6
              pytorch --- 1.13.1
        vai_q_pytorch --- 3.5.0+60df3f1+torch1.13.1

[VAIQ_NOTE]: Quant config file is empty, use default quant configuration

[VAIQ_NOTE]: Quantization calibration process start up...

[VAIQ_NOTE]: =>Quant Module is in 'cpu'.

[VAIQ_NOTE]: =>Parsing ResNet...

[VAIQ_NOTE]: Start to trace and freeze model...

[VAIQ_NOTE]: The input model nndct_st_ResNet_ed is torch.nn.Module.

[VAIQ_NOTE]: Finish tracing.

[VAIQ_NOTE]: Processing ops...
██████████████████████████████████████████████████| 348/348 [00:00<00:00, 502.58it/s, OpInfo: name = return_0, type = Return]              

[VAIQ_NOTE]: =>Doing weights equalization...

[VAIQ_NOTE]: =>Quantizable module is generated.(quantize_result/ResNet.py)

[VAIQ_NOTE]: =>Get module with quantization.

[VAIQ_NOTE]: =>Preparing data for fast finetuning module parameters ...

[VAIQ_NOTE]: Mem status(total mem: 3.76G, available mem: 1.32G).

[VAIQ_NOTE]: Memory cost by fast finetuning is 0.00 G.

[VAIQ_NOTE]: =>Find initial quantization steps for fast finetuning...
/opt/vitis_ai/conda/envs/vitis-ai-pytorch/lib/python3.8/site-packages/pytorch_nndct/quantization/torchquantizer.py:223: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.
  bnfp[1] = stats.mode(data)[0][0]

[VAIQ_NOTE]: =>Fast finetuning module parameters for better quantization accuracy...
100%|████████████████████████████████████████████████████████████████████████████████████████████████████| 105/105 [38:25<00:00, 21.96s/it]

[VAIQ_NOTE]: =>Export fast finetuned parameters ...

[VAIQ_NOTE]: =>Exporting quant model parameters.(quantize_result/param.pth)
Accuracy: 75.0000%

[VAIQ_NOTE]: =>Exporting quant config.(quantize_result/quant_info.json)
-------- End of resnet101 test 