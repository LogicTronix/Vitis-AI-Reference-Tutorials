# GENETARED BY NNDCT, DO NOT EDIT!

import torch
from torch import tensor
import pytorch_nndct as py_nndct

class ResNet(py_nndct.nn.NndctQuantModel):
    def __init__(self):
        super(ResNet, self).__init__()
        self.module_0 = py_nndct.nn.Input() #ResNet::input_0(ResNet::nndct_input_0)
        self.module_1 = py_nndct.nn.Conv2d(in_channels=3, out_channels=64, kernel_size=[7, 7], stride=[2, 2], padding=[3, 3], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Conv2d[conv1]/ret.3(ResNet::nndct_conv2d_1)
        self.module_2 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/ReLU[relu]/ret.7(ResNet::nndct_relu_2)
        self.module_3 = py_nndct.nn.MaxPool2d(kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], ceil_mode=False) #ResNet::ResNet/MaxPool2d[maxpool]/17572(ResNet::nndct_maxpool_3)
        self.module_4 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[0]/Conv2d[conv1]/ret.9(ResNet::nndct_conv2d_4)
        self.module_5 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[0]/ReLU[relu]/ret.13(ResNet::nndct_relu_5)
        self.module_6 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[0]/Conv2d[conv2]/ret.15(ResNet::nndct_conv2d_6)
        self.module_7 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[0]/ReLU[relu]/ret.19(ResNet::nndct_relu_7)
        self.module_8 = py_nndct.nn.Conv2d(in_channels=64, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[0]/Conv2d[conv3]/ret.21(ResNet::nndct_conv2d_8)
        self.module_9 = py_nndct.nn.Conv2d(in_channels=64, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[0]/Sequential[identity_downsample]/Conv2d[0]/ret.25(ResNet::nndct_conv2d_9)
        self.module_10 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer1]/block[0]/17683(ResNet::nndct_elemwise_add_10)
        self.module_11 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[0]/ReLU[relu]/ret.29(ResNet::nndct_relu_11)
        self.module_12 = py_nndct.nn.Conv2d(in_channels=256, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[1]/Conv2d[conv1]/ret.31(ResNet::nndct_conv2d_12)
        self.module_13 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[1]/ReLU[relu]/ret.35(ResNet::nndct_relu_13)
        self.module_14 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[1]/Conv2d[conv2]/ret.37(ResNet::nndct_conv2d_14)
        self.module_15 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[1]/ReLU[relu]/ret.41(ResNet::nndct_relu_15)
        self.module_16 = py_nndct.nn.Conv2d(in_channels=64, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[1]/Conv2d[conv3]/ret.43(ResNet::nndct_conv2d_16)
        self.module_17 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer1]/block[1]/17769(ResNet::nndct_elemwise_add_17)
        self.module_18 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[1]/ReLU[relu]/ret.47(ResNet::nndct_relu_18)
        self.module_19 = py_nndct.nn.Conv2d(in_channels=256, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[2]/Conv2d[conv1]/ret.49(ResNet::nndct_conv2d_19)
        self.module_20 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[2]/ReLU[relu]/ret.53(ResNet::nndct_relu_20)
        self.module_21 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[2]/Conv2d[conv2]/ret.55(ResNet::nndct_conv2d_21)
        self.module_22 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[2]/ReLU[relu]/ret.59(ResNet::nndct_relu_22)
        self.module_23 = py_nndct.nn.Conv2d(in_channels=64, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer1]/block[2]/Conv2d[conv3]/ret.61(ResNet::nndct_conv2d_23)
        self.module_24 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer1]/block[2]/17855(ResNet::nndct_elemwise_add_24)
        self.module_25 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer1]/block[2]/ReLU[relu]/ret.65(ResNet::nndct_relu_25)
        self.module_26 = py_nndct.nn.Conv2d(in_channels=256, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[0]/Conv2d[conv1]/ret.67(ResNet::nndct_conv2d_26)
        self.module_27 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[0]/ReLU[relu]/ret.71(ResNet::nndct_relu_27)
        self.module_28 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[0]/Conv2d[conv2]/ret.73(ResNet::nndct_conv2d_28)
        self.module_29 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[0]/ReLU[relu]/ret.77(ResNet::nndct_relu_29)
        self.module_30 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[0]/Conv2d[conv3]/ret.79(ResNet::nndct_conv2d_30)
        self.module_31 = py_nndct.nn.Conv2d(in_channels=256, out_channels=512, kernel_size=[1, 1], stride=[2, 2], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[0]/Sequential[identity_downsample]/Conv2d[0]/ret.83(ResNet::nndct_conv2d_31)
        self.module_32 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer2]/block[0]/17967(ResNet::nndct_elemwise_add_32)
        self.module_33 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[0]/ReLU[relu]/ret.87(ResNet::nndct_relu_33)
        self.module_34 = py_nndct.nn.Conv2d(in_channels=512, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[1]/Conv2d[conv1]/ret.89(ResNet::nndct_conv2d_34)
        self.module_35 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[1]/ReLU[relu]/ret.93(ResNet::nndct_relu_35)
        self.module_36 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[1]/Conv2d[conv2]/ret.95(ResNet::nndct_conv2d_36)
        self.module_37 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[1]/ReLU[relu]/ret.99(ResNet::nndct_relu_37)
        self.module_38 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[1]/Conv2d[conv3]/ret.101(ResNet::nndct_conv2d_38)
        self.module_39 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer2]/block[1]/18053(ResNet::nndct_elemwise_add_39)
        self.module_40 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[1]/ReLU[relu]/ret.105(ResNet::nndct_relu_40)
        self.module_41 = py_nndct.nn.Conv2d(in_channels=512, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[2]/Conv2d[conv1]/ret.107(ResNet::nndct_conv2d_41)
        self.module_42 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[2]/ReLU[relu]/ret.111(ResNet::nndct_relu_42)
        self.module_43 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[2]/Conv2d[conv2]/ret.113(ResNet::nndct_conv2d_43)
        self.module_44 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[2]/ReLU[relu]/ret.117(ResNet::nndct_relu_44)
        self.module_45 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[2]/Conv2d[conv3]/ret.119(ResNet::nndct_conv2d_45)
        self.module_46 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer2]/block[2]/18139(ResNet::nndct_elemwise_add_46)
        self.module_47 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[2]/ReLU[relu]/ret.123(ResNet::nndct_relu_47)
        self.module_48 = py_nndct.nn.Conv2d(in_channels=512, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[3]/Conv2d[conv1]/ret.125(ResNet::nndct_conv2d_48)
        self.module_49 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[3]/ReLU[relu]/ret.129(ResNet::nndct_relu_49)
        self.module_50 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[3]/Conv2d[conv2]/ret.131(ResNet::nndct_conv2d_50)
        self.module_51 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[3]/ReLU[relu]/ret.135(ResNet::nndct_relu_51)
        self.module_52 = py_nndct.nn.Conv2d(in_channels=128, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer2]/block[3]/Conv2d[conv3]/ret.137(ResNet::nndct_conv2d_52)
        self.module_53 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer2]/block[3]/18225(ResNet::nndct_elemwise_add_53)
        self.module_54 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer2]/block[3]/ReLU[relu]/ret.141(ResNet::nndct_relu_54)
        self.module_55 = py_nndct.nn.Conv2d(in_channels=512, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[0]/Conv2d[conv1]/ret.143(ResNet::nndct_conv2d_55)
        self.module_56 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[0]/ReLU[relu]/ret.147(ResNet::nndct_relu_56)
        self.module_57 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[0]/Conv2d[conv2]/ret.149(ResNet::nndct_conv2d_57)
        self.module_58 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[0]/ReLU[relu]/ret.153(ResNet::nndct_relu_58)
        self.module_59 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[0]/Conv2d[conv3]/ret.155(ResNet::nndct_conv2d_59)
        self.module_60 = py_nndct.nn.Conv2d(in_channels=512, out_channels=1024, kernel_size=[1, 1], stride=[2, 2], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[0]/Sequential[identity_downsample]/Conv2d[0]/ret.159(ResNet::nndct_conv2d_60)
        self.module_61 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[0]/18337(ResNet::nndct_elemwise_add_61)
        self.module_62 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[0]/ReLU[relu]/ret.163(ResNet::nndct_relu_62)
        self.module_63 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[1]/Conv2d[conv1]/ret.165(ResNet::nndct_conv2d_63)
        self.module_64 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[1]/ReLU[relu]/ret.169(ResNet::nndct_relu_64)
        self.module_65 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[1]/Conv2d[conv2]/ret.171(ResNet::nndct_conv2d_65)
        self.module_66 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[1]/ReLU[relu]/ret.175(ResNet::nndct_relu_66)
        self.module_67 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[1]/Conv2d[conv3]/ret.177(ResNet::nndct_conv2d_67)
        self.module_68 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[1]/18423(ResNet::nndct_elemwise_add_68)
        self.module_69 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[1]/ReLU[relu]/ret.181(ResNet::nndct_relu_69)
        self.module_70 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[2]/Conv2d[conv1]/ret.183(ResNet::nndct_conv2d_70)
        self.module_71 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[2]/ReLU[relu]/ret.187(ResNet::nndct_relu_71)
        self.module_72 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[2]/Conv2d[conv2]/ret.189(ResNet::nndct_conv2d_72)
        self.module_73 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[2]/ReLU[relu]/ret.193(ResNet::nndct_relu_73)
        self.module_74 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[2]/Conv2d[conv3]/ret.195(ResNet::nndct_conv2d_74)
        self.module_75 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[2]/18509(ResNet::nndct_elemwise_add_75)
        self.module_76 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[2]/ReLU[relu]/ret.199(ResNet::nndct_relu_76)
        self.module_77 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[3]/Conv2d[conv1]/ret.201(ResNet::nndct_conv2d_77)
        self.module_78 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[3]/ReLU[relu]/ret.205(ResNet::nndct_relu_78)
        self.module_79 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[3]/Conv2d[conv2]/ret.207(ResNet::nndct_conv2d_79)
        self.module_80 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[3]/ReLU[relu]/ret.211(ResNet::nndct_relu_80)
        self.module_81 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[3]/Conv2d[conv3]/ret.213(ResNet::nndct_conv2d_81)
        self.module_82 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[3]/18595(ResNet::nndct_elemwise_add_82)
        self.module_83 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[3]/ReLU[relu]/ret.217(ResNet::nndct_relu_83)
        self.module_84 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[4]/Conv2d[conv1]/ret.219(ResNet::nndct_conv2d_84)
        self.module_85 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[4]/ReLU[relu]/ret.223(ResNet::nndct_relu_85)
        self.module_86 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[4]/Conv2d[conv2]/ret.225(ResNet::nndct_conv2d_86)
        self.module_87 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[4]/ReLU[relu]/ret.229(ResNet::nndct_relu_87)
        self.module_88 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[4]/Conv2d[conv3]/ret.231(ResNet::nndct_conv2d_88)
        self.module_89 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[4]/18681(ResNet::nndct_elemwise_add_89)
        self.module_90 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[4]/ReLU[relu]/ret.235(ResNet::nndct_relu_90)
        self.module_91 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[5]/Conv2d[conv1]/ret.237(ResNet::nndct_conv2d_91)
        self.module_92 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[5]/ReLU[relu]/ret.241(ResNet::nndct_relu_92)
        self.module_93 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[5]/Conv2d[conv2]/ret.243(ResNet::nndct_conv2d_93)
        self.module_94 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[5]/ReLU[relu]/ret.247(ResNet::nndct_relu_94)
        self.module_95 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[5]/Conv2d[conv3]/ret.249(ResNet::nndct_conv2d_95)
        self.module_96 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[5]/18767(ResNet::nndct_elemwise_add_96)
        self.module_97 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[5]/ReLU[relu]/ret.253(ResNet::nndct_relu_97)
        self.module_98 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[6]/Conv2d[conv1]/ret.255(ResNet::nndct_conv2d_98)
        self.module_99 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[6]/ReLU[relu]/ret.259(ResNet::nndct_relu_99)
        self.module_100 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[6]/Conv2d[conv2]/ret.261(ResNet::nndct_conv2d_100)
        self.module_101 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[6]/ReLU[relu]/ret.265(ResNet::nndct_relu_101)
        self.module_102 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[6]/Conv2d[conv3]/ret.267(ResNet::nndct_conv2d_102)
        self.module_103 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[6]/18853(ResNet::nndct_elemwise_add_103)
        self.module_104 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[6]/ReLU[relu]/ret.271(ResNet::nndct_relu_104)
        self.module_105 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[7]/Conv2d[conv1]/ret.273(ResNet::nndct_conv2d_105)
        self.module_106 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[7]/ReLU[relu]/ret.277(ResNet::nndct_relu_106)
        self.module_107 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[7]/Conv2d[conv2]/ret.279(ResNet::nndct_conv2d_107)
        self.module_108 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[7]/ReLU[relu]/ret.283(ResNet::nndct_relu_108)
        self.module_109 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[7]/Conv2d[conv3]/ret.285(ResNet::nndct_conv2d_109)
        self.module_110 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[7]/18939(ResNet::nndct_elemwise_add_110)
        self.module_111 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[7]/ReLU[relu]/ret.289(ResNet::nndct_relu_111)
        self.module_112 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[8]/Conv2d[conv1]/ret.291(ResNet::nndct_conv2d_112)
        self.module_113 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[8]/ReLU[relu]/ret.295(ResNet::nndct_relu_113)
        self.module_114 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[8]/Conv2d[conv2]/ret.297(ResNet::nndct_conv2d_114)
        self.module_115 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[8]/ReLU[relu]/ret.301(ResNet::nndct_relu_115)
        self.module_116 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[8]/Conv2d[conv3]/ret.303(ResNet::nndct_conv2d_116)
        self.module_117 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[8]/19025(ResNet::nndct_elemwise_add_117)
        self.module_118 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[8]/ReLU[relu]/ret.307(ResNet::nndct_relu_118)
        self.module_119 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[9]/Conv2d[conv1]/ret.309(ResNet::nndct_conv2d_119)
        self.module_120 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[9]/ReLU[relu]/ret.313(ResNet::nndct_relu_120)
        self.module_121 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[9]/Conv2d[conv2]/ret.315(ResNet::nndct_conv2d_121)
        self.module_122 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[9]/ReLU[relu]/ret.319(ResNet::nndct_relu_122)
        self.module_123 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[9]/Conv2d[conv3]/ret.321(ResNet::nndct_conv2d_123)
        self.module_124 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[9]/19111(ResNet::nndct_elemwise_add_124)
        self.module_125 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[9]/ReLU[relu]/ret.325(ResNet::nndct_relu_125)
        self.module_126 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[10]/Conv2d[conv1]/ret.327(ResNet::nndct_conv2d_126)
        self.module_127 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[10]/ReLU[relu]/ret.331(ResNet::nndct_relu_127)
        self.module_128 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[10]/Conv2d[conv2]/ret.333(ResNet::nndct_conv2d_128)
        self.module_129 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[10]/ReLU[relu]/ret.337(ResNet::nndct_relu_129)
        self.module_130 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[10]/Conv2d[conv3]/ret.339(ResNet::nndct_conv2d_130)
        self.module_131 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[10]/19197(ResNet::nndct_elemwise_add_131)
        self.module_132 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[10]/ReLU[relu]/ret.343(ResNet::nndct_relu_132)
        self.module_133 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[11]/Conv2d[conv1]/ret.345(ResNet::nndct_conv2d_133)
        self.module_134 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[11]/ReLU[relu]/ret.349(ResNet::nndct_relu_134)
        self.module_135 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[11]/Conv2d[conv2]/ret.351(ResNet::nndct_conv2d_135)
        self.module_136 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[11]/ReLU[relu]/ret.355(ResNet::nndct_relu_136)
        self.module_137 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[11]/Conv2d[conv3]/ret.357(ResNet::nndct_conv2d_137)
        self.module_138 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[11]/19283(ResNet::nndct_elemwise_add_138)
        self.module_139 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[11]/ReLU[relu]/ret.361(ResNet::nndct_relu_139)
        self.module_140 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[12]/Conv2d[conv1]/ret.363(ResNet::nndct_conv2d_140)
        self.module_141 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[12]/ReLU[relu]/ret.367(ResNet::nndct_relu_141)
        self.module_142 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[12]/Conv2d[conv2]/ret.369(ResNet::nndct_conv2d_142)
        self.module_143 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[12]/ReLU[relu]/ret.373(ResNet::nndct_relu_143)
        self.module_144 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[12]/Conv2d[conv3]/ret.375(ResNet::nndct_conv2d_144)
        self.module_145 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[12]/19369(ResNet::nndct_elemwise_add_145)
        self.module_146 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[12]/ReLU[relu]/ret.379(ResNet::nndct_relu_146)
        self.module_147 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[13]/Conv2d[conv1]/ret.381(ResNet::nndct_conv2d_147)
        self.module_148 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[13]/ReLU[relu]/ret.385(ResNet::nndct_relu_148)
        self.module_149 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[13]/Conv2d[conv2]/ret.387(ResNet::nndct_conv2d_149)
        self.module_150 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[13]/ReLU[relu]/ret.391(ResNet::nndct_relu_150)
        self.module_151 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[13]/Conv2d[conv3]/ret.393(ResNet::nndct_conv2d_151)
        self.module_152 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[13]/19455(ResNet::nndct_elemwise_add_152)
        self.module_153 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[13]/ReLU[relu]/ret.397(ResNet::nndct_relu_153)
        self.module_154 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[14]/Conv2d[conv1]/ret.399(ResNet::nndct_conv2d_154)
        self.module_155 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[14]/ReLU[relu]/ret.403(ResNet::nndct_relu_155)
        self.module_156 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[14]/Conv2d[conv2]/ret.405(ResNet::nndct_conv2d_156)
        self.module_157 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[14]/ReLU[relu]/ret.409(ResNet::nndct_relu_157)
        self.module_158 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[14]/Conv2d[conv3]/ret.411(ResNet::nndct_conv2d_158)
        self.module_159 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[14]/19541(ResNet::nndct_elemwise_add_159)
        self.module_160 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[14]/ReLU[relu]/ret.415(ResNet::nndct_relu_160)
        self.module_161 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[15]/Conv2d[conv1]/ret.417(ResNet::nndct_conv2d_161)
        self.module_162 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[15]/ReLU[relu]/ret.421(ResNet::nndct_relu_162)
        self.module_163 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[15]/Conv2d[conv2]/ret.423(ResNet::nndct_conv2d_163)
        self.module_164 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[15]/ReLU[relu]/ret.427(ResNet::nndct_relu_164)
        self.module_165 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[15]/Conv2d[conv3]/ret.429(ResNet::nndct_conv2d_165)
        self.module_166 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[15]/19627(ResNet::nndct_elemwise_add_166)
        self.module_167 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[15]/ReLU[relu]/ret.433(ResNet::nndct_relu_167)
        self.module_168 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[16]/Conv2d[conv1]/ret.435(ResNet::nndct_conv2d_168)
        self.module_169 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[16]/ReLU[relu]/ret.439(ResNet::nndct_relu_169)
        self.module_170 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[16]/Conv2d[conv2]/ret.441(ResNet::nndct_conv2d_170)
        self.module_171 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[16]/ReLU[relu]/ret.445(ResNet::nndct_relu_171)
        self.module_172 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[16]/Conv2d[conv3]/ret.447(ResNet::nndct_conv2d_172)
        self.module_173 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[16]/19713(ResNet::nndct_elemwise_add_173)
        self.module_174 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[16]/ReLU[relu]/ret.451(ResNet::nndct_relu_174)
        self.module_175 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[17]/Conv2d[conv1]/ret.453(ResNet::nndct_conv2d_175)
        self.module_176 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[17]/ReLU[relu]/ret.457(ResNet::nndct_relu_176)
        self.module_177 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[17]/Conv2d[conv2]/ret.459(ResNet::nndct_conv2d_177)
        self.module_178 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[17]/ReLU[relu]/ret.463(ResNet::nndct_relu_178)
        self.module_179 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[17]/Conv2d[conv3]/ret.465(ResNet::nndct_conv2d_179)
        self.module_180 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[17]/19799(ResNet::nndct_elemwise_add_180)
        self.module_181 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[17]/ReLU[relu]/ret.469(ResNet::nndct_relu_181)
        self.module_182 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[18]/Conv2d[conv1]/ret.471(ResNet::nndct_conv2d_182)
        self.module_183 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[18]/ReLU[relu]/ret.475(ResNet::nndct_relu_183)
        self.module_184 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[18]/Conv2d[conv2]/ret.477(ResNet::nndct_conv2d_184)
        self.module_185 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[18]/ReLU[relu]/ret.481(ResNet::nndct_relu_185)
        self.module_186 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[18]/Conv2d[conv3]/ret.483(ResNet::nndct_conv2d_186)
        self.module_187 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[18]/19885(ResNet::nndct_elemwise_add_187)
        self.module_188 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[18]/ReLU[relu]/ret.487(ResNet::nndct_relu_188)
        self.module_189 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[19]/Conv2d[conv1]/ret.489(ResNet::nndct_conv2d_189)
        self.module_190 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[19]/ReLU[relu]/ret.493(ResNet::nndct_relu_190)
        self.module_191 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[19]/Conv2d[conv2]/ret.495(ResNet::nndct_conv2d_191)
        self.module_192 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[19]/ReLU[relu]/ret.499(ResNet::nndct_relu_192)
        self.module_193 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[19]/Conv2d[conv3]/ret.501(ResNet::nndct_conv2d_193)
        self.module_194 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[19]/19971(ResNet::nndct_elemwise_add_194)
        self.module_195 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[19]/ReLU[relu]/ret.505(ResNet::nndct_relu_195)
        self.module_196 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[20]/Conv2d[conv1]/ret.507(ResNet::nndct_conv2d_196)
        self.module_197 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[20]/ReLU[relu]/ret.511(ResNet::nndct_relu_197)
        self.module_198 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[20]/Conv2d[conv2]/ret.513(ResNet::nndct_conv2d_198)
        self.module_199 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[20]/ReLU[relu]/ret.517(ResNet::nndct_relu_199)
        self.module_200 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[20]/Conv2d[conv3]/ret.519(ResNet::nndct_conv2d_200)
        self.module_201 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[20]/20057(ResNet::nndct_elemwise_add_201)
        self.module_202 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[20]/ReLU[relu]/ret.523(ResNet::nndct_relu_202)
        self.module_203 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[21]/Conv2d[conv1]/ret.525(ResNet::nndct_conv2d_203)
        self.module_204 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[21]/ReLU[relu]/ret.529(ResNet::nndct_relu_204)
        self.module_205 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[21]/Conv2d[conv2]/ret.531(ResNet::nndct_conv2d_205)
        self.module_206 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[21]/ReLU[relu]/ret.535(ResNet::nndct_relu_206)
        self.module_207 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[21]/Conv2d[conv3]/ret.537(ResNet::nndct_conv2d_207)
        self.module_208 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[21]/20143(ResNet::nndct_elemwise_add_208)
        self.module_209 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[21]/ReLU[relu]/ret.541(ResNet::nndct_relu_209)
        self.module_210 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[22]/Conv2d[conv1]/ret.543(ResNet::nndct_conv2d_210)
        self.module_211 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[22]/ReLU[relu]/ret.547(ResNet::nndct_relu_211)
        self.module_212 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[22]/Conv2d[conv2]/ret.549(ResNet::nndct_conv2d_212)
        self.module_213 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[22]/ReLU[relu]/ret.553(ResNet::nndct_relu_213)
        self.module_214 = py_nndct.nn.Conv2d(in_channels=256, out_channels=1024, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer3]/block[22]/Conv2d[conv3]/ret.555(ResNet::nndct_conv2d_214)
        self.module_215 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer3]/block[22]/20229(ResNet::nndct_elemwise_add_215)
        self.module_216 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer3]/block[22]/ReLU[relu]/ret.559(ResNet::nndct_relu_216)
        self.module_217 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[0]/Conv2d[conv1]/ret.561(ResNet::nndct_conv2d_217)
        self.module_218 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[0]/ReLU[relu]/ret.565(ResNet::nndct_relu_218)
        self.module_219 = py_nndct.nn.Conv2d(in_channels=512, out_channels=512, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[0]/Conv2d[conv2]/ret.567(ResNet::nndct_conv2d_219)
        self.module_220 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[0]/ReLU[relu]/ret.571(ResNet::nndct_relu_220)
        self.module_221 = py_nndct.nn.Conv2d(in_channels=512, out_channels=2048, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[0]/Conv2d[conv3]/ret.573(ResNet::nndct_conv2d_221)
        self.module_222 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=2048, kernel_size=[1, 1], stride=[2, 2], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[0]/Sequential[identity_downsample]/Conv2d[0]/ret.577(ResNet::nndct_conv2d_222)
        self.module_223 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer4]/block[0]/20341(ResNet::nndct_elemwise_add_223)
        self.module_224 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[0]/ReLU[relu]/ret.581(ResNet::nndct_relu_224)
        self.module_225 = py_nndct.nn.Conv2d(in_channels=2048, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[1]/Conv2d[conv1]/ret.583(ResNet::nndct_conv2d_225)
        self.module_226 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[1]/ReLU[relu]/ret.587(ResNet::nndct_relu_226)
        self.module_227 = py_nndct.nn.Conv2d(in_channels=512, out_channels=512, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[1]/Conv2d[conv2]/ret.589(ResNet::nndct_conv2d_227)
        self.module_228 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[1]/ReLU[relu]/ret.593(ResNet::nndct_relu_228)
        self.module_229 = py_nndct.nn.Conv2d(in_channels=512, out_channels=2048, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[1]/Conv2d[conv3]/ret.595(ResNet::nndct_conv2d_229)
        self.module_230 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer4]/block[1]/20427(ResNet::nndct_elemwise_add_230)
        self.module_231 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[1]/ReLU[relu]/ret.599(ResNet::nndct_relu_231)
        self.module_232 = py_nndct.nn.Conv2d(in_channels=2048, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[2]/Conv2d[conv1]/ret.601(ResNet::nndct_conv2d_232)
        self.module_233 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[2]/ReLU[relu]/ret.605(ResNet::nndct_relu_233)
        self.module_234 = py_nndct.nn.Conv2d(in_channels=512, out_channels=512, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[2]/Conv2d[conv2]/ret.607(ResNet::nndct_conv2d_234)
        self.module_235 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[2]/ReLU[relu]/ret.611(ResNet::nndct_relu_235)
        self.module_236 = py_nndct.nn.Conv2d(in_channels=512, out_channels=2048, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #ResNet::ResNet/Sequential[layer4]/block[2]/Conv2d[conv3]/ret.613(ResNet::nndct_conv2d_236)
        self.module_237 = py_nndct.nn.Add() #ResNet::ResNet/Sequential[layer4]/block[2]/20513(ResNet::nndct_elemwise_add_237)
        self.module_238 = py_nndct.nn.ReLU(inplace=False) #ResNet::ResNet/Sequential[layer4]/block[2]/ReLU[relu]/ret.617(ResNet::nndct_relu_238)
        self.module_239 = py_nndct.nn.AdaptiveAvgPool2d(output_size=[1, 1]) #ResNet::ResNet/AdaptiveAvgPool2d[avgpool]/20532(ResNet::nndct_adaptive_avg_pool2d_239)
        self.module_240 = py_nndct.nn.Module('nndct_shape') #ResNet::ResNet/20535(ResNet::nndct_shape_240)
        self.module_241 = py_nndct.nn.Module('nndct_reshape') #ResNet::ResNet/ret.619(ResNet::nndct_reshape_241)
        self.module_242 = py_nndct.nn.Linear(in_features=2048, out_features=3, bias=True) #ResNet::ResNet/Linear[fc]/ret(ResNet::nndct_dense_242)

    @py_nndct.nn.forward_processor
    def forward(self, *args):
        output_module_0 = self.module_0(input=args[0])
        output_module_0 = self.module_1(output_module_0)
        output_module_0 = self.module_2(output_module_0)
        output_module_0 = self.module_3(output_module_0)
        output_module_4 = self.module_4(output_module_0)
        output_module_4 = self.module_5(output_module_4)
        output_module_4 = self.module_6(output_module_4)
        output_module_4 = self.module_7(output_module_4)
        output_module_4 = self.module_8(output_module_4)
        output_module_9 = self.module_9(output_module_0)
        output_module_4 = self.module_10(input=output_module_4, other=output_module_9, alpha=1)
        output_module_4 = self.module_11(output_module_4)
        output_module_12 = self.module_12(output_module_4)
        output_module_12 = self.module_13(output_module_12)
        output_module_12 = self.module_14(output_module_12)
        output_module_12 = self.module_15(output_module_12)
        output_module_12 = self.module_16(output_module_12)
        output_module_12 = self.module_17(input=output_module_12, other=output_module_4, alpha=1)
        output_module_12 = self.module_18(output_module_12)
        output_module_19 = self.module_19(output_module_12)
        output_module_19 = self.module_20(output_module_19)
        output_module_19 = self.module_21(output_module_19)
        output_module_19 = self.module_22(output_module_19)
        output_module_19 = self.module_23(output_module_19)
        output_module_19 = self.module_24(input=output_module_19, other=output_module_12, alpha=1)
        output_module_19 = self.module_25(output_module_19)
        output_module_26 = self.module_26(output_module_19)
        output_module_26 = self.module_27(output_module_26)
        output_module_26 = self.module_28(output_module_26)
        output_module_26 = self.module_29(output_module_26)
        output_module_26 = self.module_30(output_module_26)
        output_module_31 = self.module_31(output_module_19)
        output_module_26 = self.module_32(input=output_module_26, other=output_module_31, alpha=1)
        output_module_26 = self.module_33(output_module_26)
        output_module_34 = self.module_34(output_module_26)
        output_module_34 = self.module_35(output_module_34)
        output_module_34 = self.module_36(output_module_34)
        output_module_34 = self.module_37(output_module_34)
        output_module_34 = self.module_38(output_module_34)
        output_module_34 = self.module_39(input=output_module_34, other=output_module_26, alpha=1)
        output_module_34 = self.module_40(output_module_34)
        output_module_41 = self.module_41(output_module_34)
        output_module_41 = self.module_42(output_module_41)
        output_module_41 = self.module_43(output_module_41)
        output_module_41 = self.module_44(output_module_41)
        output_module_41 = self.module_45(output_module_41)
        output_module_41 = self.module_46(input=output_module_41, other=output_module_34, alpha=1)
        output_module_41 = self.module_47(output_module_41)
        output_module_48 = self.module_48(output_module_41)
        output_module_48 = self.module_49(output_module_48)
        output_module_48 = self.module_50(output_module_48)
        output_module_48 = self.module_51(output_module_48)
        output_module_48 = self.module_52(output_module_48)
        output_module_48 = self.module_53(input=output_module_48, other=output_module_41, alpha=1)
        output_module_48 = self.module_54(output_module_48)
        output_module_55 = self.module_55(output_module_48)
        output_module_55 = self.module_56(output_module_55)
        output_module_55 = self.module_57(output_module_55)
        output_module_55 = self.module_58(output_module_55)
        output_module_55 = self.module_59(output_module_55)
        output_module_60 = self.module_60(output_module_48)
        output_module_55 = self.module_61(input=output_module_55, other=output_module_60, alpha=1)
        output_module_55 = self.module_62(output_module_55)
        output_module_63 = self.module_63(output_module_55)
        output_module_63 = self.module_64(output_module_63)
        output_module_63 = self.module_65(output_module_63)
        output_module_63 = self.module_66(output_module_63)
        output_module_63 = self.module_67(output_module_63)
        output_module_63 = self.module_68(input=output_module_63, other=output_module_55, alpha=1)
        output_module_63 = self.module_69(output_module_63)
        output_module_70 = self.module_70(output_module_63)
        output_module_70 = self.module_71(output_module_70)
        output_module_70 = self.module_72(output_module_70)
        output_module_70 = self.module_73(output_module_70)
        output_module_70 = self.module_74(output_module_70)
        output_module_70 = self.module_75(input=output_module_70, other=output_module_63, alpha=1)
        output_module_70 = self.module_76(output_module_70)
        output_module_77 = self.module_77(output_module_70)
        output_module_77 = self.module_78(output_module_77)
        output_module_77 = self.module_79(output_module_77)
        output_module_77 = self.module_80(output_module_77)
        output_module_77 = self.module_81(output_module_77)
        output_module_77 = self.module_82(input=output_module_77, other=output_module_70, alpha=1)
        output_module_77 = self.module_83(output_module_77)
        output_module_84 = self.module_84(output_module_77)
        output_module_84 = self.module_85(output_module_84)
        output_module_84 = self.module_86(output_module_84)
        output_module_84 = self.module_87(output_module_84)
        output_module_84 = self.module_88(output_module_84)
        output_module_84 = self.module_89(input=output_module_84, other=output_module_77, alpha=1)
        output_module_84 = self.module_90(output_module_84)
        output_module_91 = self.module_91(output_module_84)
        output_module_91 = self.module_92(output_module_91)
        output_module_91 = self.module_93(output_module_91)
        output_module_91 = self.module_94(output_module_91)
        output_module_91 = self.module_95(output_module_91)
        output_module_91 = self.module_96(input=output_module_91, other=output_module_84, alpha=1)
        output_module_91 = self.module_97(output_module_91)
        output_module_98 = self.module_98(output_module_91)
        output_module_98 = self.module_99(output_module_98)
        output_module_98 = self.module_100(output_module_98)
        output_module_98 = self.module_101(output_module_98)
        output_module_98 = self.module_102(output_module_98)
        output_module_98 = self.module_103(input=output_module_98, other=output_module_91, alpha=1)
        output_module_98 = self.module_104(output_module_98)
        output_module_105 = self.module_105(output_module_98)
        output_module_105 = self.module_106(output_module_105)
        output_module_105 = self.module_107(output_module_105)
        output_module_105 = self.module_108(output_module_105)
        output_module_105 = self.module_109(output_module_105)
        output_module_105 = self.module_110(input=output_module_105, other=output_module_98, alpha=1)
        output_module_105 = self.module_111(output_module_105)
        output_module_112 = self.module_112(output_module_105)
        output_module_112 = self.module_113(output_module_112)
        output_module_112 = self.module_114(output_module_112)
        output_module_112 = self.module_115(output_module_112)
        output_module_112 = self.module_116(output_module_112)
        output_module_112 = self.module_117(input=output_module_112, other=output_module_105, alpha=1)
        output_module_112 = self.module_118(output_module_112)
        output_module_119 = self.module_119(output_module_112)
        output_module_119 = self.module_120(output_module_119)
        output_module_119 = self.module_121(output_module_119)
        output_module_119 = self.module_122(output_module_119)
        output_module_119 = self.module_123(output_module_119)
        output_module_119 = self.module_124(input=output_module_119, other=output_module_112, alpha=1)
        output_module_119 = self.module_125(output_module_119)
        output_module_126 = self.module_126(output_module_119)
        output_module_126 = self.module_127(output_module_126)
        output_module_126 = self.module_128(output_module_126)
        output_module_126 = self.module_129(output_module_126)
        output_module_126 = self.module_130(output_module_126)
        output_module_126 = self.module_131(input=output_module_126, other=output_module_119, alpha=1)
        output_module_126 = self.module_132(output_module_126)
        output_module_133 = self.module_133(output_module_126)
        output_module_133 = self.module_134(output_module_133)
        output_module_133 = self.module_135(output_module_133)
        output_module_133 = self.module_136(output_module_133)
        output_module_133 = self.module_137(output_module_133)
        output_module_133 = self.module_138(input=output_module_133, other=output_module_126, alpha=1)
        output_module_133 = self.module_139(output_module_133)
        output_module_140 = self.module_140(output_module_133)
        output_module_140 = self.module_141(output_module_140)
        output_module_140 = self.module_142(output_module_140)
        output_module_140 = self.module_143(output_module_140)
        output_module_140 = self.module_144(output_module_140)
        output_module_140 = self.module_145(input=output_module_140, other=output_module_133, alpha=1)
        output_module_140 = self.module_146(output_module_140)
        output_module_147 = self.module_147(output_module_140)
        output_module_147 = self.module_148(output_module_147)
        output_module_147 = self.module_149(output_module_147)
        output_module_147 = self.module_150(output_module_147)
        output_module_147 = self.module_151(output_module_147)
        output_module_147 = self.module_152(input=output_module_147, other=output_module_140, alpha=1)
        output_module_147 = self.module_153(output_module_147)
        output_module_154 = self.module_154(output_module_147)
        output_module_154 = self.module_155(output_module_154)
        output_module_154 = self.module_156(output_module_154)
        output_module_154 = self.module_157(output_module_154)
        output_module_154 = self.module_158(output_module_154)
        output_module_154 = self.module_159(input=output_module_154, other=output_module_147, alpha=1)
        output_module_154 = self.module_160(output_module_154)
        output_module_161 = self.module_161(output_module_154)
        output_module_161 = self.module_162(output_module_161)
        output_module_161 = self.module_163(output_module_161)
        output_module_161 = self.module_164(output_module_161)
        output_module_161 = self.module_165(output_module_161)
        output_module_161 = self.module_166(input=output_module_161, other=output_module_154, alpha=1)
        output_module_161 = self.module_167(output_module_161)
        output_module_168 = self.module_168(output_module_161)
        output_module_168 = self.module_169(output_module_168)
        output_module_168 = self.module_170(output_module_168)
        output_module_168 = self.module_171(output_module_168)
        output_module_168 = self.module_172(output_module_168)
        output_module_168 = self.module_173(input=output_module_168, other=output_module_161, alpha=1)
        output_module_168 = self.module_174(output_module_168)
        output_module_175 = self.module_175(output_module_168)
        output_module_175 = self.module_176(output_module_175)
        output_module_175 = self.module_177(output_module_175)
        output_module_175 = self.module_178(output_module_175)
        output_module_175 = self.module_179(output_module_175)
        output_module_175 = self.module_180(input=output_module_175, other=output_module_168, alpha=1)
        output_module_175 = self.module_181(output_module_175)
        output_module_182 = self.module_182(output_module_175)
        output_module_182 = self.module_183(output_module_182)
        output_module_182 = self.module_184(output_module_182)
        output_module_182 = self.module_185(output_module_182)
        output_module_182 = self.module_186(output_module_182)
        output_module_182 = self.module_187(input=output_module_182, other=output_module_175, alpha=1)
        output_module_182 = self.module_188(output_module_182)
        output_module_189 = self.module_189(output_module_182)
        output_module_189 = self.module_190(output_module_189)
        output_module_189 = self.module_191(output_module_189)
        output_module_189 = self.module_192(output_module_189)
        output_module_189 = self.module_193(output_module_189)
        output_module_189 = self.module_194(input=output_module_189, other=output_module_182, alpha=1)
        output_module_189 = self.module_195(output_module_189)
        output_module_196 = self.module_196(output_module_189)
        output_module_196 = self.module_197(output_module_196)
        output_module_196 = self.module_198(output_module_196)
        output_module_196 = self.module_199(output_module_196)
        output_module_196 = self.module_200(output_module_196)
        output_module_196 = self.module_201(input=output_module_196, other=output_module_189, alpha=1)
        output_module_196 = self.module_202(output_module_196)
        output_module_203 = self.module_203(output_module_196)
        output_module_203 = self.module_204(output_module_203)
        output_module_203 = self.module_205(output_module_203)
        output_module_203 = self.module_206(output_module_203)
        output_module_203 = self.module_207(output_module_203)
        output_module_203 = self.module_208(input=output_module_203, other=output_module_196, alpha=1)
        output_module_203 = self.module_209(output_module_203)
        output_module_210 = self.module_210(output_module_203)
        output_module_210 = self.module_211(output_module_210)
        output_module_210 = self.module_212(output_module_210)
        output_module_210 = self.module_213(output_module_210)
        output_module_210 = self.module_214(output_module_210)
        output_module_210 = self.module_215(input=output_module_210, other=output_module_203, alpha=1)
        output_module_210 = self.module_216(output_module_210)
        output_module_217 = self.module_217(output_module_210)
        output_module_217 = self.module_218(output_module_217)
        output_module_217 = self.module_219(output_module_217)
        output_module_217 = self.module_220(output_module_217)
        output_module_217 = self.module_221(output_module_217)
        output_module_222 = self.module_222(output_module_210)
        output_module_217 = self.module_223(input=output_module_217, other=output_module_222, alpha=1)
        output_module_217 = self.module_224(output_module_217)
        output_module_225 = self.module_225(output_module_217)
        output_module_225 = self.module_226(output_module_225)
        output_module_225 = self.module_227(output_module_225)
        output_module_225 = self.module_228(output_module_225)
        output_module_225 = self.module_229(output_module_225)
        output_module_225 = self.module_230(input=output_module_225, other=output_module_217, alpha=1)
        output_module_225 = self.module_231(output_module_225)
        output_module_232 = self.module_232(output_module_225)
        output_module_232 = self.module_233(output_module_232)
        output_module_232 = self.module_234(output_module_232)
        output_module_232 = self.module_235(output_module_232)
        output_module_232 = self.module_236(output_module_232)
        output_module_232 = self.module_237(input=output_module_232, other=output_module_225, alpha=1)
        output_module_232 = self.module_238(output_module_232)
        output_module_232 = self.module_239(output_module_232)
        output_module_240 = self.module_240(input=output_module_232, dim=0)
        output_module_241 = self.module_241(input=output_module_232, shape=[output_module_240,-1])
        output_module_241 = self.module_242(output_module_241)
        return output_module_241
